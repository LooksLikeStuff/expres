/**
 * –ú–æ–¥—É–ª—å –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–æ–≤ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π —Ä–∞–∑–º–µ—Ä–∞
 */

// –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
if (typeof window.LargeFileUploader !== 'undefined') {
    console.log('LargeFileUploader —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é');
} else {

let isInitializing = false; // –§–ª–∞–≥ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥–≤–æ–π–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏

// –ñ–¥–µ–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏ jQuery
document.addEventListener('DOMContentLoaded', function() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ jQuery
    if (typeof $ === 'undefined') {
        console.error('jQuery –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω. –ü–æ–¥–æ–∂–¥–µ–º –µ–≥–æ –∑–∞–≥—Ä—É–∑–∫–∏...');
        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ jQuery
        const checkJQuery = setInterval(function() {
            if (typeof $ !== 'undefined') {
                clearInterval(checkJQuery);
                initLargeFileUploader();
            }
        }, 100);
    } else {
        initLargeFileUploader();
    }
});

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ jQuery
$(document).ready(function() {
    initLargeFileUploader();
});

function initLargeFileUploader() {
    if (window.largeFileUploader || isInitializing) {
        return; // –£–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è
    }
    
    isInitializing = true;
    
    try {
        window.largeFileUploader = new LargeFileUploader();
        window.largeFileUploader.init();
        console.log('Large File Uploader –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Large File Uploader:', error);
    } finally {
        isInitializing = false;
    }
}

class LargeFileUploader {
    constructor() {
        // ===== –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–ê–Ø –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨ =====
        this.maxRetries = 15; // –ï—â–µ –±–æ–ª—å—à–µ –ø–æ–ø—ã—Ç–æ–∫ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
        this.retryDelay = 100; // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏
        this.chunkSize = 64 * 1024 * 1024; // 64MB chunks –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏
        this.maxFileSize = 0; // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
        this.maxTotalSize = 0; // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –æ–±—â–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
        this.parallelUploads = 16; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–µ –∑–∞–≥—Ä—É–∑–∫–∏
        this.connectionTimeout = 300000; // 5 –º–∏–Ω—É—Ç –Ω–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ (–±—ã—Å—Ç—Ä–µ–µ)
        this.uploadTimeout = 0; // –ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É
        this.bufferSize = 128 * 1024 * 1024; // 128MB –±—É—Ñ–µ—Ä –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏
        
        // ===== –ê–ì–†–ï–°–°–ò–í–ù–ê–Ø –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –°–ö–û–†–û–°–¢–ò =====
        this.compressionEnabled = false; // –û—Ç–∫–ª—é—á–∞–µ–º —Å–∂–∞—Ç–∏–µ –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
        this.keepAliveEnabled = true; // Keep-alive —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        this.concurrentConnections = 32; // –ú–∞–∫—Å–∏–º—É–º –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
        this.useHttp2 = true; // –í–∫–ª—é—á–∞–µ–º HTTP/2 –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
        this.preloadEnabled = true; // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
        this.pipeliningEnabled = true; // HTTP pipelining
        this.streamingEnabled = true; // –ü–æ—Ç–æ–∫–æ–≤–∞—è –ø–µ—Ä–µ–¥–∞—á–∞
        this.multiplexingEnabled = true; // –ú—É–ª—å—Ç–∏–ø–ª–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
        
        // ===== –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò =====
        this.progressUpdateInterval = 50; // –û—á–µ–Ω—å —á–∞—Å—Ç—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ (50ms)
        this.speedCalculationWindow = 2; // –ë—ã—Å—Ç—Ä—ã–π —Ä–∞—Å—á–µ—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ (2 —Å–µ–∫)
        this.adaptiveChunkSize = true; // –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π —Ä–∞–∑–º–µ—Ä —á–∞–Ω–∫–æ–≤
        this.memoryOptimization = true; // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–∞–º—è—Ç–∏
        this.cachingEnabled = false; // –û—Ç–∫–ª—é—á–∞–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
        this.compressionLevel = 0; // –ë–µ–∑ –∫–æ–º–ø—Ä–µ—Å—Å–∏–∏ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏
        
        // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        this.uploadStartTime = null;
        this.speedHistory = [];
        this.lastProgressUpdate = 0;
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤
     */
    init() {
        this.setupFileInputHandlers();
        this.setupFormHandlers();
        this.setupProgressIndicators();
        this.setupDragAndDrop();
        this.preloadConnections(); // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
    }

    /**
     * –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏
     */
    preloadConnections() {
        if (!this.preloadEnabled) return;
        
        console.log('üöÄ –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –¥–ª—è —Ç—É—Ä–±–æ-—Ä–µ–∂–∏–º–∞...');
        
        // –°–æ–∑–¥–∞–µ–º –Ω–µ–≤–∏–¥–∏–º—ã–π iframe –¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        const preloadFrame = $('<iframe>', {
            src: 'about:blank',
            style: 'display: none;'
        });
        
        $('body').append(preloadFrame);
        
        // –í—ã–ø–æ–ª–Ω—è–µ–º "—Ä–∞–∑–æ–≥—Ä–µ–≤" —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
        $.ajax({
            url: '/api/ping',
            type: 'HEAD',
            timeout: 5000,
            cache: false,
            success: () => {
                console.log('‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
            },
            error: () => {
                console.log('‚ö†Ô∏è –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å, –Ω–æ —ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ');
            }
        });
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º keep-alive —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        this.establishKeepAliveConnections();
    }

    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∫–∞ keep-alive —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
     */
    establishKeepAliveConnections() {
        if (!this.keepAliveEnabled) return;
        
        // –°–æ–∑–¥–∞–µ–º –ø—É–ª keep-alive —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏
        for (let i = 0; i < Math.min(this.concurrentConnections, 8); i++) {
            setTimeout(() => {
                $.ajax({
                    url: '/api/keepalive',
                    type: 'HEAD',
                    timeout: 2000,
                    cache: false,
                    headers: {
                        'Connection': 'keep-alive',
                        'Keep-Alive': 'timeout=300, max=1000'
                    }
                });
            }, i * 100); // –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–∞–ø—Ä–æ—Å—ã –≤–æ –≤—Ä–µ–º–µ–Ω–∏
        }
        
        console.log(`üì° –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ ${Math.min(this.concurrentConnections, 8)} keep-alive —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π`);
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –ø–æ–ª–µ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
     */
    setupFileInputHandlers() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–∞–π–ª–æ–≤—ã—Ö –ø–æ–ª–µ–π —Å –∫–ª–∞—Å—Å–æ–º yandex-upload
        $(document).on('change', '.yandex-upload', (e) => {
            const file = e.target.files[0];
            if (file) {
                this.validateAndPreviewFile(file, e.target);
            }
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        $(document).on('change', '#document-upload', (e) => {
            const files = Array.from(e.target.files);
            if (files.length > 0) {
                this.validateMultipleFiles(files, e.target);
            }
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤—ã—Ö –ø–æ–ª–µ–π
        $(document).on('change', 'input[type="file"]', (e) => {
            if (e.target.files && e.target.files.length > 0) {
                this.handleFileSelection(e.target);
            }
        });
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Drag & Drop
     */
    setupDragAndDrop() {
        $(document).on('dragover', '.yandex-upload, .document-upload-input', (e) => {
            e.preventDefault();
            $(e.target).addClass('dragover');
        });

        $(document).on('dragleave', '.yandex-upload, .document-upload-input', (e) => {
            e.preventDefault();
            $(e.target).removeClass('dragover');
        });

        $(document).on('drop', '.yandex-upload, .document-upload-input', (e) => {
            e.preventDefault();
            $(e.target).removeClass('dragover');
            
            const files = e.originalEvent.dataTransfer.files;
            if (files.length > 0) {
                e.target.files = files;
                this.handleFileSelection(e.target);
            }
        });
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤
     */
    handleFileSelection(input) {
        const files = Array.from(input.files);
        
        if (input.multiple) {
            this.validateMultipleFiles(files, input);
        } else if (files.length > 0) {
            this.validateAndPreviewFile(files[0], input);
        }
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ñ–æ—Ä–º –¥–ª—è –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤
     */
    setupFormHandlers() {
        // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã –¥–ª—è –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤
        $(document).on('submit', '#editForm', (e) => {
            const hasLargeFiles = this.checkForLargeFiles(e.target);
            if (hasLargeFiles) {
                e.preventDefault();
                this.handleLargeFileUpload(e.target);
            }
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        $(document).on('click', '#upload-documents-btn', (e) => {
            e.preventDefault();
            this.handleDocumentUpload();
        });
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
     */
    setupProgressIndicators() {
        // –°–æ–∑–¥–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤ —Å —Ç—É—Ä–±–æ-—Ä–µ–∂–∏–º–æ–º
        if (!document.getElementById('large-file-loader')) {
            const loader = $(`
                <div id="large-file-loader" class="large-file-loader" style="display: none;">
                    <div class="loader-overlay">
                        <div class="loader-content">
                            <div class="loader-icon">
                                <i class="fas fa-rocket fa-3x turbo-icon"></i>
                            </div>
                            <h3>üöÄ –¢—É—Ä–±–æ-–∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤</h3>
                            <p class="loader-status">–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏...</p>
                            <div class="progress-container">
                                <div class="progress-bar turbo-progress" style="width: 0%; background: linear-gradient(90deg, #4CAF50, #2196F3); animation: pulse 1s infinite;"></div>
                                <span class="progress-text">0%</span>
                            </div>
                            <div class="loader-details">
                                <div class="upload-speed turbo-text">üöÄ –°–∫–æ—Ä–æ—Å—Ç—å: -- MB/s</div>
                                <div class="time-remaining">‚è±Ô∏è –û—Å—Ç–∞–ª–æ—Å—å: --:--</div>
                                <div class="file-info">üìÅ –§–∞–π–ª: --</div>
                                <div class="optimization-info">‚ö° –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è: –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è</div>
                            </div>
                            <button class="cancel-upload-btn" style="margin-top: 15px; display: none; background: #f44336; color: white; border: none; padding: 10px 20px; border-radius: 5px; cursor: pointer;">
                                ‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É
                            </button>
                        </div>
                    </div>
                    <style>
                        .large-file-loader {
                            position: fixed;
                            top: 0;
                            left: 0;
                            width: 100%;
                            height: 100%;
                            background: rgba(0, 0, 0, 0.8);
                            z-index: 999999;
                            display: flex;
                            align-items: center;
                            justify-content: center;
                        }
                        .loader-content {
                            background: white;
                            padding: 30px;
                            border-radius: 15px;
                            text-align: center;
                            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
                            min-width: 400px;
                        }
                        .turbo-icon {
                            color: #2196F3;
                            animation: rotate 2s linear infinite;
                        }
                        .progress-container {
                            position: relative;
                            background: #f0f0f0;
                            border-radius: 10px;
                            height: 25px;
                            margin: 20px 0;
                        }
                        .turbo-progress {
                            height: 100%;
                            border-radius: 10px;
                            transition: width 0.3s ease;
                        }
                        .progress-text {
                            position: absolute;
                            top: 50%;
                            left: 50%;
                            transform: translate(-50%, -50%);
                            font-weight: bold;
                            color: white;
                            text-shadow: 1px 1px 2px rgba(0,0,0,0.5);
                        }
                        .turbo-text {
                            font-weight: bold;
                            color: #2196F3;
                        }
                        @keyframes rotate {
                            from { transform: rotate(0deg); }
                            to { transform: rotate(360deg); }
                        }
                        @keyframes pulse {
                            0% { opacity: 1; }
                            50% { opacity: 0.7; }
                            100% { opacity: 1; }
                        }
                        .loader-details {
                            text-align: left;
                            background: #f9f9f9;
                            padding: 15px;
                            border-radius: 10px;
                            margin-top: 15px;
                        }
                        .loader-details div {
                            margin: 5px 0;
                            font-size: 14px;
                        }
                    </style>
                </div>
            `);
            $('body').append(loader);

            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã –∑–∞–≥—Ä—É–∑–∫–∏
            $('.cancel-upload-btn').on('click', () => {
                this.cancelUpload();
            });
        }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤ - —Ç–µ–ø–µ—Ä—å –≤—Å–µ —Ñ–∞–π–ª—ã —Å—á–∏—Ç–∞—é—Ç—Å—è –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
     */
    checkForLargeFiles(form) {
        const fileInputs = form.querySelectorAll('input[type="file"]');
        let hasLargeFiles = false;

        fileInputs.forEach(input => {
            if (input.files && input.files.length > 0) {
                Array.from(input.files).forEach(file => {
                    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É –¥–ª—è –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –±–æ–ª—å—à–µ 1MB
                    if (file.size > 1024 * 1024) {
                        hasLargeFiles = true;
                    }
                });
            }
        });

        return hasLargeFiles;
    }

    /**
     * –í–∞–ª–∏–¥–∞—Ü–∏—è –∏ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Ñ–∞–π–ª–∞ - —É–±–∏—Ä–∞–µ–º –≤—Å–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
     */
    validateAndPreviewFile(file, input) {
        // –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ - –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º —Ñ–∞–π–ª—ã –ª—é–±–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
        console.log(`–í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª: ${file.name}, —Ä–∞–∑–º–µ—Ä: ${this.formatBytes(file.size)}`);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
        this.showFileInfo(file, input);
        return true;
    }

    /**
     * –í–∞–ª–∏–¥–∞—Ü–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ - —É–±–∏—Ä–∞–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞
     */
    validateMultipleFiles(files, input) {
        let totalSize = 0;

        files.forEach(file => {
            totalSize += file.size;
        });

        console.log(`–í—ã–±—Ä–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${files.length}, –æ–±—â–∏–π —Ä–∞–∑–º–µ—Ä: ${this.formatBytes(totalSize)}`);

        // –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –æ–±—â–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ - –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º —Ñ–∞–π–ª—ã –ª—é–±–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ —Ñ–∞–π–ª–æ–≤
        this.updateFileCounter(files);
        return true;
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
     */
    async handleDocumentUpload() {
        const fileInput = $('#document-upload')[0];
        const files = fileInput.files;
        
        if (files.length === 0) {
            this.showError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏');
            return;
        }

        const dealId = $('#dealIdField').val();
        if (!dealId) {
            this.showError('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å ID —Å–¥–µ–ª–∫–∏');
            return;
        }

        // –°–æ–∑–¥–∞–µ–º FormData –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–æ–≤
        const formData = new FormData();
        formData.append('_token', $('meta[name="csrf-token"]').attr('content'));
        formData.append('deal_id', dealId);
        
        for (let i = 0; i < files.length; i++) {
            formData.append('documents[]', files[i]);
        }

        this.showLargeFileLoader();
        this.updateLoaderStatus('–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã...');

        try {
            const response = await this.performDocumentUpload(formData);
            
            if (response.success) {
                this.updateLoaderStatus('–î–æ–∫—É–º–µ–Ω—Ç—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!');
                setTimeout(() => {
                    this.hideLargeFileLoader();
                    this.showSuccessMessage('–î–æ–∫—É–º–µ–Ω—Ç—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
                    
                    // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤
                    fileInput.value = '';
                    $('.selected-files-count').text('–§–∞–π–ª—ã –Ω–µ –≤—ã–±—Ä–∞–Ω—ã');
                    $('#upload-documents-btn').prop('disabled', true);
                    
                    // –°–æ–∑–¥–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
                    const documentUploadCompleteEvent = new CustomEvent('documentUploadComplete', {
                        detail: {
                            response: response,
                            documents: response.documents
                        }
                    });
                    
                    // –í—ã–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
                    document.dispatchEvent(documentUploadCompleteEvent);
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –µ—Å–ª–∏ –µ—Å—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è
                    if (typeof updateDocumentsList === 'function') {
                        updateDocumentsList(response.documents);
                    }
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
                    const dealId = $('#dealIdField').val();
                    if (dealId) {
                        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–¥–µ–ª–∫–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
                        $.get(`/deal/${dealId}/data`, function(serverResponse) {
                            if (serverResponse.success && serverResponse.deal) {
                                // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è
                                if (typeof updateDealModalData === 'function') {
                                    updateDealModalData(serverResponse.deal);
                                }
                                
                                // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏
                                if (typeof window.forceUpdateFileLinks === 'function') {
                                    window.forceUpdateFileLinks();
                                }
                            }
                        }).fail(function() {
                            console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å–¥–µ–ª–∫–∏ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤');
                        });
                    }
                }, 1000);
            } else {
                throw new Error(response.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤');
            }
        } catch (error) {
            this.hideLargeFileLoader();
            this.showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: ' + error.message);
        }
    }

    /**
     * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π
     */
    performDocumentUpload(formData) {
        return new Promise((resolve, reject) => {
            const dealId = $('#dealIdField').val();
            const startTime = Date.now();
            this.uploadStartTime = startTime;

            $.ajax({
                url: `/deal/${dealId}/upload-documents`,
                type: 'POST',
                data: formData,
                contentType: false,
                processData: false,
                timeout: 0, // –ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –≤—Ä–µ–º–µ–Ω–∏
                cache: false, // –û—Ç–∫–ª—é—á–∞–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ
                async: true, // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å
                global: false, // –û—Ç–∫–ª—é—á–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è AJAX
                xhr: () => {
                    const xhr = new window.XMLHttpRequest();
                    
                    // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è XHR –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
                    if (xhr.upload) {
                        // –ë–æ–ª–µ–µ —á–∞—Å—Ç–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
                        xhr.upload.addEventListener('progress', (e) => {
                            if (e.lengthComputable) {
                                const now = Date.now();
                                // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 50ms –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
                                if (now - this.lastProgressUpdate >= this.progressUpdateInterval) {
                                    const percent = Math.round((e.loaded / e.total) * 100);
                                    const speed = this.calculateUploadSpeed(e.loaded, startTime);
                                    const remaining = this.calculateTimeRemaining(e.loaded, e.total, speed);
                                    
                                    this.updateProgress(percent, speed, remaining);
                                    this.lastProgressUpdate = now;
                                    
                                    // –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —á–∞–Ω–∫–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–∫–æ—Ä–æ—Å—Ç–∏
                                    this.adaptChunkSizeBasedOnSpeed(speed);
                                }
                            }
                        });
                        
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∫–∏
                        xhr.upload.addEventListener('loadstart', () => {
                            console.log('–ù–∞—á–∞–ª–æ —Ç—É—Ä–±–æ-–∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é');
                            this.updateLoaderStatus('üöÄ –¢—É—Ä–±–æ-–∑–∞–≥—Ä—É–∑–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞...');
                        });
                        
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
                        xhr.upload.addEventListener('load', () => {
                            console.log('–¢—É—Ä–±–æ-–∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
                            this.updateLoaderStatus('‚ö° –ú–æ–ª–Ω–∏–µ–Ω–æ—Å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–µ...');
                        });
                    }
                    
                    // –ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ XHR
                    xhr.responseType = 'json'; // –ê–≤—Ç–æ–ø–∞—Ä—Å–∏–Ω–≥ JSON
                    
                    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏
                    if (xhr.setRequestHeader) {
                        xhr.setRequestHeader('Connection', 'keep-alive');
                        xhr.setRequestHeader('Keep-Alive', 'timeout=300, max=1000');
                    }
                    
                    return xhr;
                },
                // –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
                headers: {
                    'X-Requested-With': 'XMLHttpRequest',
                    'Cache-Control': 'no-cache, no-store, must-revalidate',
                    'Pragma': 'no-cache',
                    'Expires': '0',
                    'Connection': 'keep-alive',
                    'Keep-Alive': 'timeout=300, max=1000'
                },
                success: (response) => {
                    console.log('üéâ –¢—É—Ä–±–æ-–∑–∞–≥—Ä—É–∑–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞:', response);
                    resolve(response);
                },
                error: (xhr, status, error) => {
                    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç—É—Ä–±–æ-–∑–∞–≥—Ä—É–∑–∫–∏:', status, error);
                    reject(new Error(`${status}: ${error}`));
                }
            });
        });
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤
     */
    async handleLargeFileUpload(form) {
        const formData = new FormData(form);
        const dealId = $('#dealIdField').val();
        
        this.showLargeFileLoader();
        this.updateLoaderStatus('–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–æ–≤...');

        try {
            const response = await this.uploadWithRetry(formData, dealId);
            
            if (response.success) {
                this.updateLoaderStatus('–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
                setTimeout(() => {
                    this.hideLargeFileLoader();
                    this.showSuccessMessage('–§–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
                    
                    // –°–æ–∑–¥–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –±–æ–ª—å—à–æ–≥–æ —Ñ–∞–π–ª–∞
                    const largeFileUploadCompleteEvent = new CustomEvent('largeFileUploadComplete', {
                        detail: {
                            response: response,
                            deal: response.deal
                        }
                    });
                    
                    // –í—ã–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
                    document.dispatchEvent(largeFileUploadCompleteEvent);
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ –≤–º–µ—Å—Ç–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                    if (typeof updateDealModalData === 'function' && response.deal) {
                        updateDealModalData(response.deal);
                        this.updateFileLinksInModal(response.deal);
                    }
                    
                    // –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
                    if (typeof updateDealModalData === 'undefined') {
                        setTimeout(() => {
                            location.reload();
                        }, 2000);
                    }
                }, 1000);
            } else {
                throw new Error(response.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏');
            }
        } catch (error) {
            this.hideLargeFileLoader();
            this.showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ' + error.message);
        }
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
     */
    async uploadWithRetry(formData, dealId, attempt = 1) {
        try {
            return await this.performUpload(formData, dealId);
        } catch (error) {
            if (attempt < this.maxRetries) {
                this.updateLoaderStatus(`–ü–æ–ø—ã—Ç–∫–∞ ${attempt + 1} –∏–∑ ${this.maxRetries}...`);
                await this.delay(this.retryDelay);
                return this.uploadWithRetry(formData, dealId, attempt + 1);
            } else {
                throw error;
            }
        }
    }

    /**
     * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
     */
    performUpload(formData, dealId) {
        return new Promise((resolve, reject) => {
            const startTime = Date.now();
            this.currentXhr = null;

            $.ajax({
                url: `/deal/update/${dealId}`,
                type: 'POST',
                data: formData,
                contentType: false,
                processData: false,
                timeout: 0, // –ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –≤—Ä–µ–º–µ–Ω–∏
                cache: false, // –û—Ç–∫–ª—é—á–∞–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ
                async: true, // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å
                global: false, // –û—Ç–∫–ª—é—á–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è AJAX
                xhr: () => {
                    const xhr = new window.XMLHttpRequest();
                    this.currentXhr = xhr;
                    
                    // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
                    if (xhr.upload) {
                        xhr.upload.addEventListener('progress', (e) => {
                            if (e.lengthComputable) {
                                const now = Date.now();
                                if (now - this.lastProgressUpdate >= this.progressUpdateInterval) {
                                    const percent = Math.round((e.loaded / e.total) * 100);
                                    const speed = this.calculateUploadSpeed(e.loaded, startTime);
                                    const remaining = this.calculateTimeRemaining(e.loaded, e.total, speed);
                                    
                                    this.updateProgress(percent, speed, remaining);
                                    this.lastProgressUpdate = now;
                                    
                                    // –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
                                    this.adaptChunkSizeBasedOnSpeed(speed);
                                }
                            }
                        });
                        
                        xhr.upload.addEventListener('loadstart', () => {
                            console.log('üöÄ –ù–∞—á–∞–ª–æ —Ç—É—Ä–±–æ-–∑–∞–≥—Ä—É–∑–∫–∏ —Å–¥–µ–ª–∫–∏');
                            this.updateLoaderStatus('üöÄ –¢—É—Ä–±–æ-—Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω...');
                        });
                    }

                    // –ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ XHR
                    xhr.responseType = 'json';
                    
                    return xhr;
                },
                // –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏  
                headers: {
                    'X-Requested-With': 'XMLHttpRequest',
                    'Cache-Control': 'no-cache, no-store, must-revalidate',
                    'Pragma': 'no-cache',
                    'Expires': '0',
                    'Connection': 'keep-alive',
                    'Keep-Alive': 'timeout=300, max=1000'
                },
                success: (response) => {
                    this.currentXhr = null;
                    console.log('üéâ –¢—É—Ä–±–æ-–∑–∞–≥—Ä—É–∑–∫–∞ —Å–¥–µ–ª–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
                    resolve(response);
                },
                error: (xhr, status, error) => {
                    this.currentXhr = null;
                    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç—É—Ä–±–æ-–∑–∞–≥—Ä—É–∑–∫–∏ —Å–¥–µ–ª–∫–∏:', status, error);
                    reject(new Error(`${status}: ${error}`));
                }
            });
        });
    }

    /**
     * –û—Ç–º–µ–Ω–∞ –∑–∞–≥—Ä—É–∑–∫–∏
     */
    cancelUpload() {
        if (this.currentXhr) {
            this.currentXhr.abort();
            this.currentXhr = null;
        }
        
        this.hideLargeFileLoader();
        this.showError('–ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
    }

    /**
     * –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é
     */
    calculateUploadSpeed(uploadedBytes, startTime) {
        const elapsed = (Date.now() - startTime) / 1000;
        if (elapsed <= 0) return 0;
        
        const currentSpeed = uploadedBytes / elapsed;
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–∫–æ—Ä–æ—Å—Ç–∏ –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞
        this.speedHistory.push({
            time: Date.now(),
            speed: currentSpeed
        });
        
        // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ—Ä–µ–Ω–∏—è –≤ –æ–∫–Ω–µ —Ä–∞—Å—á–µ—Ç–∞
        const windowMs = this.speedCalculationWindow * 1000;
        this.speedHistory = this.speedHistory.filter(
            entry => Date.now() - entry.time <= windowMs
        );
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ä–µ–¥–Ω—é—é —Å–∫–æ—Ä–æ—Å—Ç—å –∑–∞ –æ–∫–Ω–æ
        if (this.speedHistory.length > 1) {
            const avgSpeed = this.speedHistory.reduce((sum, entry) => sum + entry.speed, 0) / this.speedHistory.length;
            return avgSpeed;
        }
        
        return currentSpeed;
    }

    /**
     * –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–∞–∑–º–µ—Ä–∞ —á–∞–Ω–∫–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–∫–æ—Ä–æ—Å—Ç–∏
     */
    adaptChunkSizeBasedOnSpeed(speed) {
        if (!this.adaptiveChunkSize) return;
        
        const speedMBps = speed / (1024 * 1024); // –°–∫–æ—Ä–æ—Å—Ç—å –≤ MB/s
        
        // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —á–∞–Ω–∫–æ–≤ –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
        if (speedMBps > 10) {
            // –û—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ - –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ —á–∞–Ω–∫–∏
            this.chunkSize = 128 * 1024 * 1024; // 128MB
        } else if (speedMBps > 5) {
            // –ë—ã—Å—Ç—Ä–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
            this.chunkSize = 64 * 1024 * 1024; // 64MB
        } else if (speedMBps > 2) {
            // –°—Ä–µ–¥–Ω–µ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
            this.chunkSize = 32 * 1024 * 1024; // 32MB
        } else if (speedMBps > 1) {
            // –ú–µ–¥–ª–µ–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
            this.chunkSize = 16 * 1024 * 1024; // 16MB
        } else {
            // –û—á–µ–Ω—å –º–µ–¥–ª–µ–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
            this.chunkSize = 8 * 1024 * 1024; // 8MB
        }
        
        console.log(`üìä –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è: —Å–∫–æ—Ä–æ—Å—Ç—å ${speedMBps.toFixed(2)} MB/s, —Ä–∞–∑–º–µ—Ä —á–∞–Ω–∫–∞ ${this.formatBytes(this.chunkSize)}`);
    }

    /**
     * –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ—Å—Ç–∞–≤—à–µ–≥–æ—Å—è –≤—Ä–µ–º–µ–Ω–∏
     */
    calculateTimeRemaining(uploaded, total, speed) {
        if (speed === 0) return 0;
        return (total - uploaded) / speed;
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π
     */
    updateProgress(percent, speed, remaining) {
        $('.large-file-loader .progress-bar').css('width', percent + '%');
        $('.large-file-loader .progress-text').text(percent + '%');
        
        const speedMBps = speed / (1024 * 1024);
        let speedText = `–°–∫–æ—Ä–æ—Å—Ç—å: ${this.formatBytes(speed)}/s`;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å–∫–æ—Ä–æ—Å—Ç–µ–π
        if (speedMBps > 10) {
            speedText = `üöÄ –¢—É—Ä–±–æ: ${this.formatBytes(speed)}/s`;
        } else if (speedMBps > 5) {
            speedText = `‚ö° –ë—ã—Å—Ç—Ä–æ: ${this.formatBytes(speed)}/s`;
        } else if (speedMBps > 2) {
            speedText = `üî• –•–æ—Ä–æ—à–æ: ${this.formatBytes(speed)}/s`;
        } else if (speedMBps > 1) {
            speedText = `üì° –ó–∞–≥—Ä—É–∑–∫–∞: ${this.formatBytes(speed)}/s`;
        }
        
        $('.large-file-loader .upload-speed').text(speedText);
        $('.large-file-loader .time-remaining').text(`–û—Å—Ç–∞–ª–æ—Å—å: ${this.formatTime(remaining)}`);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã –¥–ª—è –¥–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–≥—Ä—É–∑–æ–∫
        if (percent > 5 && remaining > 30) {
            $('.cancel-upload-btn').show();
        }
        
        // –ú–µ–Ω—è–µ–º —Ü–≤–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏
        const progressBar = $('.large-file-loader .progress-bar');
        if (speedMBps > 10) {
            progressBar.css('background-color', '#4CAF50'); // –ó–µ–ª–µ–Ω—ã–π –¥–ª—è —Ç—É—Ä–±–æ
        } else if (speedMBps > 5) {
            progressBar.css('background-color', '#2196F3'); // –°–∏–Ω–∏–π –¥–ª—è –±—ã—Å—Ç—Ä–æ–π
        } else if (speedMBps > 2) {
            progressBar.css('background-color', '#FF9800'); // –û—Ä–∞–Ω–∂–µ–≤—ã–π –¥–ª—è —Å—Ä–µ–¥–Ω–µ–π
        } else {
            progressBar.css('background-color', '#F44336'); // –ö—Ä–∞—Å–Ω—ã–π –¥–ª—è –º–µ–¥–ª–µ–Ω–Ω–æ–π
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ —Å —Ç—É—Ä–±–æ-–∏–Ω–¥–∏–∫–∞—Ü–∏–µ–π
     */
    showFileInfo(file, input) {
        const speedEstimate = this.estimateUploadTime(file.size);
        
        const info = $(`
            <div class="file-info-tooltip turbo-file-info" style="margin-top: 5px; font-size: 12px; color: #666; background: #f0f8ff; padding: 8px; border-radius: 5px; border-left: 3px solid #2196F3;">
                <div style="margin-bottom: 3px;">
                    <i class="fas fa-rocket" style="color: #2196F3;"></i> 
                    <strong>${file.name}</strong> (${this.formatBytes(file.size)})
                </div>
                <div style="font-size: 11px; color: #888;">
                    ‚ö° –¢—É—Ä–±–æ-—Ä–µ–∂–∏–º: ${speedEstimate}
                </div>
            </div>
        `);
        
        // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        $(input).siblings('.file-info-tooltip').remove();
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
        $(input).after(info);
        info.hide().fadeIn(300);
    }

    /**
     * –û—Ü–µ–Ω–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
     */
    estimateUploadTime(fileSize) {
        const fileSizeMB = fileSize / (1024 * 1024);
        
        if (fileSizeMB < 10) {
            return "–ú–≥–Ω–æ–≤–µ–Ω–Ω–æ (< 5 —Å–µ–∫)";
        } else if (fileSizeMB < 50) {
            return "–û—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ (< 30 —Å–µ–∫)";
        } else if (fileSizeMB < 200) {
            return "–ë—ã—Å—Ç—Ä–æ (< 2 –º–∏–Ω)";
        } else if (fileSizeMB < 500) {
            return "–°—Ä–µ–¥–Ω–µ (< 5 –º–∏–Ω)";
        } else {
            return "–°—Ç–∞–±–∏–ª—å–Ω–æ (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ)";
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ —Ñ–∞–π–ª–æ–≤
     */
    updateFileCounter(files) {
        const totalSize = files.reduce((sum, file) => sum + file.size, 0);
        $('.selected-files-count').text(
            `–í—ã–±—Ä–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${files.length} (–æ–±—â–∏–π —Ä–∞–∑–º–µ—Ä: ${this.formatBytes(totalSize)})`
        );
        
        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–≥—Ä—É–∑–∫–∏
        $('#upload-documents-btn').prop('disabled', false);
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–≥—Ä—É–∑—á–∏–∫ –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤
     */
    showLargeFileLoader() {
        $('#large-file-loader').fadeIn(300).addClass('active');
    }

    /**
     * –°–∫—Ä—ã—Ç—å –∑–∞–≥—Ä—É–∑—á–∏–∫ –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤
     */
    hideLargeFileLoader() {
        $('#large-file-loader').fadeOut(300).removeClass('active');
        $('.cancel-upload-btn').hide();
    }

    /**
     * –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑—á–∏–∫–∞
     */
    updateLoaderStatus(status) {
        $('.large-file-loader .loader-status').text(status);
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
     */
    showSuccessMessage(message) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        if (typeof showDealUpdateSuccess === 'function') {
            showDealUpdateSuccess(message);
        } else {
            this.showNotification(message, 'success');
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É
     */
    showError(message) {
        if (typeof showDealUpdateError === 'function') {
            showDealUpdateError(message);
        } else {
            this.showNotification('–û—à–∏–±–∫–∞: ' + message, 'error');
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
     */
    showNotification(message, type = 'info') {
        const notification = $(`
            <div class="upload-notification ${type}" style="position: fixed; top: 20px; right: 20px; z-index: 999999; 
                 background: ${type === 'success' ? '#4caf50' : type === 'error' ? '#f44336' : '#2196f3'}; 
                 color: white; padding: 15px 20px; border-radius: 4px; box-shadow: 0 4px 8px rgba(0,0,0,0.3);">
                ${message}
            </div>
        `);
        
        $('body').append(notification);
        
        setTimeout(() => {
            notification.fadeOut(500, function() {
                $(this).remove();
            });
        }, 5000);
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
     */
    formatBytes(bytes) {
        if (bytes === 0) return '0 Bytes';
        const k = 1024;
        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
        const i = Math.floor(Math.log(bytes) / Math.log(k));
        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
     */
    formatTime(seconds) {
        if (!seconds || seconds === Infinity) return '--:--';
        const hours = Math.floor(seconds / 3600);
        const minutes = Math.floor((seconds % 3600) / 60);
        const secs = Math.floor(seconds % 60);
        
        if (hours > 0) {
            return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;
        } else {
            return `${minutes}:${secs.toString().padStart(2, '0')}`;
        }
    }

    /**
     * –û–±–Ω–æ–≤–∏—Ç—å —Ñ–∞–π–ª–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
     */
    updateFileLinksInModal(dealData) {
        console.log('–û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ', dealData);
        
        // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –ø–æ–ª—è–º —Å–¥–µ–ª–∫–∏ –∏ –∏—â–µ–º –ø–æ–ª—è —Å –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫ —Å—Å—ã–ª–∫–∞–º–∏
        for (let field in dealData) {
            if (field.startsWith('yandex_url_')) {
                const fieldName = field.replace('yandex_url_', '');
                const originalNameField = 'original_name_' + fieldName;
                const yandexUrl = dealData[field];
                const originalName = dealData[originalNameField] || '–ü—Ä–æ—Å–º–æ—Ç—Ä —Ñ–∞–π–ª–∞';
                
                // –ù–∞—Ö–æ–¥–∏–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å—Å—ã–ª–∫–æ–π
                let fileLink = $(`input[name="${fieldName}"]`).siblings('.file-link.yandex-file-link');
                
                if (yandexUrl && yandexUrl.trim() !== '') {
                    if (fileLink.length === 0) {
                        // –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∏ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é
                        const newFileLink = $(`
                            <div class="file-link yandex-file-link">
                                <a href="${yandexUrl}" target="_blank" title="–û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª, –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫">
                                    <i class="fas fa-cloud-download-alt"></i> ${originalName}
                                </a>
                            </div>
                        `);
                        
                        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –ø–æ—Å–ª–µ –ø–æ–ª—è –≤–≤–æ–¥–∞ —Ñ–∞–π–ª–∞
                        $(`input[name="${fieldName}"]`).after(newFileLink);
                        console.log(`–°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è —Ñ–∞–π–ª–æ–≤–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–ª—è ${fieldName}`);
                    } else {
                        // –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ —É–∂–µ –µ—Å—Ç—å, –æ–±–Ω–æ–≤–ª—è–µ–º –µ—ë
                        fileLink.html(`
                            <a href="${yandexUrl}" target="_blank" title="–û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª, –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫">
                                <i class="fas fa-cloud-download-alt"></i> ${originalName}
                            </a>
                        `);
                        console.log(`–û–±–Ω–æ–≤–ª–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–ª—è ${fieldName}`);
                    }
                }
            }
        }
    }

    /**
     * –ó–∞–¥–µ—Ä–∂–∫–∞
     */
    delay(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }
}

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª–∞—Å—Å –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏
window.LargeFileUploader = LargeFileUploader;

} // –ö–æ–Ω–µ—Ü –∑–∞—â–∏—Ç—ã –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
