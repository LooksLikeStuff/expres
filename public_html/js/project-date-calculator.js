/**
 * üóìÔ∏è –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –†–ê–°–ß–ï–¢ –ü–õ–ê–ù–û–í–û–ô –î–ê–¢–´ –ó–ê–í–ï–†–®–ï–ù–ò–Ø –ü–†–û–ï–ö–¢–ê
 * 
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –ø–ª–∞–Ω–æ–≤—É—é –¥–∞—Ç—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
 * –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞—Ç—ã —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∏ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ —Ä–∞–±–æ—á–∏—Ö –¥–Ω—è—Ö.
 * 
 * –£—á–∏—Ç—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ä–∞–±–æ—á–∏–µ –¥–Ω–∏ (–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫-–ø—è—Ç–Ω–∏—Ü–∞), –∏—Å–∫–ª—é—á–∞—è –≤—ã—Ö–æ–¥–Ω—ã–µ.
 * 
 * @version 1.0
 * @author ExpressDizain Team
 */

class ProjectDateCalculator {
    constructor() {
        this.startDateField = '#start_date';
        this.durationField = '#project_duration';
        this.endDateField = '#project_end_date';
        this.debugMode = true;
        
        this.init();
    }

    init() {
        this.log('üóìÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –¥–∞—Ç –ø—Ä–æ–µ–∫—Ç–∞...');
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–∂–∏–¥–∞–Ω–∏—è DOM
        const initWhenReady = () => {
            if (typeof $ === 'undefined') {
                this.log('‚è≥ jQuery –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–≤—Ç–æ—Ä—è–µ–º –ø–æ–ø—ã—Ç–∫—É...');
                setTimeout(initWhenReady, 100);
                return;
            }
            
            if (document.readyState === 'loading') {
                $(document).ready(() => {
                    this.setupCalculator();
                });
            } else {
                this.setupCalculator();
            }
        };
        
        initWhenReady();
    }

    setupCalculator() {
        this.log('üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞...');
        this.bindEvents();
        this.calculateInitialDate();
        this.log('‚úÖ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–∞—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
    }

    bindEvents() {
        this.log('üîó –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π...');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª–µ–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        const $startField = $(this.startDateField);
        const $durationField = $(this.durationField);
        const $endField = $(this.endDateField);
        
        this.log(`üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—è:`, {
            startDate: $startField.length,
            duration: $durationField.length,
            endDate: $endField.length
        });
        
        if ($startField.length === 0) {
            this.log('‚ùå –ü–æ–ª–µ –¥–∞—Ç—ã —Å—Ç–∞—Ä—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!');
            return;
        }
        
        if ($durationField.length === 0) {
            this.log('‚ùå –ü–æ–ª–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!');
            return;
        }
        
        if ($endField.length === 0) {
            this.log('‚ùå –ü–æ–ª–µ –¥–∞—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!');
            return;
        }
        
        // –°–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞—Ç—ã —Å—Ç–∞—Ä—Ç–∞
        $startField.on('change', () => {
            this.log('üìÖ –ò–∑–º–µ–Ω–µ–Ω–∞ –¥–∞—Ç–∞ —Å—Ç–∞—Ä—Ç–∞');
            this.calculateEndDate();
        });

        // –°–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        $durationField.on('input change keyup', () => {
            this.log('‚è±Ô∏è –ò–∑–º–µ–Ω–µ–Ω–∞ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞');
            this.calculateEndDate();
        });

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å—Ç–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞
        $durationField.on('paste', () => {
            setTimeout(() => {
                this.calculateEndDate();
            }, 50);
        });
        
        this.log('‚úÖ –°–æ–±—ã—Ç–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω—ã');
    }

    calculateInitialDate() {
        this.log('üöÄ –†–∞—Å—á–µ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–π –¥–∞—Ç—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');
        this.calculateEndDate();
    }

    calculateEndDate() {
        const startDateValue = $(this.startDateField).val();
        const durationValue = parseInt($(this.durationField).val());

        this.log(`üìä –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞: –î–∞—Ç–∞ —Å—Ç–∞—Ä—Ç–∞: ${startDateValue}, –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${durationValue} –¥–Ω–µ–π`);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        if (!startDateValue || !durationValue || durationValue <= 0) {
            this.log('‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞');
            $(this.endDateField).val('');
            this.updateEndDateDisplay('');
            return;
        }

        try {
            const startDate = new Date(startDateValue);
            const endDate = this.addWorkingDays(startDate, durationValue);
            const endDateString = this.formatDate(endDate);

            this.log(`‚úÖ –†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–∞—è –¥–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: ${endDateString}`);
            
            $(this.endDateField).val(endDateString);
            this.updateEndDateDisplay(endDateString);
            this.showCalculationAnimation();
            
        } catch (error) {
            this.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ –¥–∞—Ç—ã:', error);
            $(this.endDateField).val('');
            this.updateEndDateDisplay('');
        }
    }

    /**
     * –î–æ–±–∞–≤–ª—è–µ—Ç —Ä–∞–±–æ—á–∏–µ –¥–Ω–∏ –∫ –¥–∞—Ç–µ (–∏—Å–∫–ª—é—á–∞—è –≤—ã—Ö–æ–¥–Ω—ã–µ)
     * @param {Date} startDate - –ù–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞
     * @param {number} workingDays - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π
     * @returns {Date} - –ö–æ–Ω–µ—á–Ω–∞—è –¥–∞—Ç–∞
     */
    addWorkingDays(startDate, workingDays) {
        let currentDate = new Date(startDate);
        let addedDays = 0;

        while (addedDays < workingDays) {
            currentDate.setDate(currentDate.getDate() + 1);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å (–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ = 1, –ø—è—Ç–Ω–∏—Ü–∞ = 5)
            const dayOfWeek = currentDate.getDay();
            if (dayOfWeek >= 1 && dayOfWeek <= 5) {
                addedDays++;
            }
        }

        return currentDate;
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç YYYY-MM-DD
     * @param {Date} date - –î–∞—Ç–∞ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
     * @returns {string} - –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∞—Ç–∞
     */
    formatDate(date) {
        const year = date.getFullYear();
        const month = String(date.getMonth() + 1).padStart(2, '0');
        const day = String(date.getDate()).padStart(2, '0');
        return `${year}-${month}-${day}`;
    }

    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª—è –¥–∞—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
     * @param {string} dateValue - –ó–Ω–∞—á–µ–Ω–∏–µ –¥–∞—Ç—ã
     */
    updateEndDateDisplay(dateValue) {
        const $endDateField = $(this.endDateField);
        
        if (dateValue) {
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—è
            $endDateField.addClass('auto-calculated-active');
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            this.showSuccessIndicator();
        } else {
            $endDateField.removeClass('auto-calculated-active');
        }
    }

    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞
     */
    showSuccessIndicator() {
        const $container = $(this.endDateField).closest('.col-md-4');
        const $existingIndicator = $container.find('.calculation-success');
        
        if ($existingIndicator.length === 0) {
            const $indicator = $(`
                <div class="calculation-success mt-1">
                    <small class="text-success">
                        <i class="fas fa-check-circle me-1"></i>
                        –î–∞—Ç–∞ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
                    </small>
                </div>
            `);
            
            $container.append($indicator);
            
            // –£–±–∏—Ä–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
            setTimeout(() => {
                $indicator.fadeOut(300, function() {
                    $(this).remove();
                });
            }, 3000);
        }
    }

    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é —Ä–∞—Å—á–µ—Ç–∞
     */
    showCalculationAnimation() {
        const $endDateField = $(this.endDateField);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
        $endDateField.addClass('calculating');
        
        setTimeout(() => {
            $endDateField.removeClass('calculating').addClass('calculated');
            
            setTimeout(() => {
                $endDateField.removeClass('calculated');
            }, 1000);
        }, 300);
    }

    /**
     * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
     * @param {...any} args - –ê—Ä–≥—É–º–µ–Ω—Ç—ã –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
     */
    log(...args) {
        if (this.debugMode) {
            console.log('üóìÔ∏è [ProjectDateCalculator]', ...args);
        }
    }
}

// –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –æ–∂–∏–¥–∞–Ω–∏–µ–º jQuery
function initProjectDateCalculator() {
    console.log('üóìÔ∏è –ü–æ–ø—ã—Ç–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –¥–∞—Ç...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å jQuery
    if (typeof $ === 'undefined') {
        console.log('‚è≥ jQuery –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –∂–¥–µ–º...');
        setTimeout(initProjectDateCalculator, 100);
        return;
    }
    
    console.log('‚úÖ jQuery –Ω–∞–π–¥–µ–Ω, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä...');
    
    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
    window.projectDateCalculator = new ProjectDateCalculator();
    
    console.log('üóìÔ∏è –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–∞—Ç –ø—Ä–æ–µ–∫—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initProjectDateCalculator);
} else {
    initProjectDateCalculator();
}
