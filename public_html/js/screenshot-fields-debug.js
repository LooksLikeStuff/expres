/**
 * –û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –≤–æ –≤–∫–ª–∞–¥–∫–µ "–†–∞–±–æ—Ç–∞ –Ω–∞–¥ –ø—Ä–æ–µ–∫—Ç–æ–º"
 * –°–æ–∑–¥–∞–Ω: 5 –∞–≤–≥—É—Å—Ç–∞ 2025 –≥.
 */

(function() {
    'use strict';
    
    console.log('üîß –ó–∞–≥—Ä—É–∂–µ–Ω –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –ø–æ–ª–µ–π');
    
    // –°–ø–∏—Å–æ–∫ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –ø–æ–ª–µ–π
    const problemFields = [
        'screenshot_work_1',
        'screenshot_work_2', 
        'screenshot_work_3',
        'screenshot_final'
    ];
    
    // –§—É–Ω–∫—Ü–∏—è –æ—Ç–ª–∞–¥–∫–∏
    function debugFileUploadSystem() {
        console.log('üöÄ === –û–¢–õ–ê–î–ö–ê –°–ò–°–¢–ï–ú–´ –ó–ê–ì–†–£–ó–ö–ò –§–ê–ô–õ–û–í ===');
        
        // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª–µ–π
        console.log('üìã 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –ø–æ–ª–µ–π:');
        problemFields.forEach((fieldName, index) => {
            const input = document.querySelector(`input[name="${fieldName}"]`);
            if (input) {
                console.log(`   ‚úÖ ${index + 1}. ${fieldName}: –Ω–∞–π–¥–µ–Ω (ID: ${input.id}, Classes: ${input.className})`);
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–±—ã—Ç–∏—è
                const events = ['change', 'input'];
                events.forEach(eventType => {
                    const hasEvent = input.onclick || input.onchange || input.oninput;
                    console.log(`      –°–æ–±—ã—Ç–∏—è ${eventType}: ${hasEvent ? '–Ω–∞–π–¥–µ–Ω—ã' : '–Ω–µ –Ω–∞–π–¥–µ–Ω—ã'}`);
                });
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ç—Ä–∏–±—É—Ç—ã
                console.log(`      data-upload-type: ${input.getAttribute('data-upload-type')}`);
                console.log(`      data-yandex-initialized: ${input.getAttribute('data-yandex-initialized')}`);
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è —Å—Å—ã–ª–æ–∫
                const linkContainer = document.querySelector(`.yandex-file-links-container[data-field="${fieldName}"]`);
                console.log(`      –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å—Å—ã–ª–æ–∫: ${linkContainer ? '–Ω–∞–π–¥–µ–Ω' : '–Ω–µ –Ω–∞–π–¥–µ–Ω'}`);
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å—Å—ã–ª–∫–∏
                const existingLinks = input.closest('.col-md-6, .mb-3')?.querySelectorAll('.existing-file-link');
                console.log(`      –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å—Å—ã–ª–∫–∏: ${existingLinks ? existingLinks.length : 0}`);
                
            } else {
                console.log(`   ‚ùå ${index + 1}. ${fieldName}: –ù–ï –ù–ê–ô–î–ï–ù!`);
            }
        });
        
        // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É
        console.log('üìã 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã:');
        if (window.YandexDiskUniversal) {
            console.log('   ‚úÖ YandexDiskUniversal: –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
            console.log(`   –í–µ—Ä—Å–∏—è: ${window.YandexDiskUniversal.version}`);
            console.log(`   –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞: ${window.YandexDiskUniversal.initialized}`);
            console.log(`   –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø–æ–ª—è: ${window.YandexDiskUniversal.supportedFields.join(', ')}`);
        } else {
            console.log('   ‚ùå YandexDiskUniversal: –ù–ï –ó–ê–ì–†–£–ñ–ï–ù–ê!');
        }
        
        // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º AJAX —Å–∏—Å—Ç–µ–º—É
        console.log('üìã 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ AJAX —Å–∏—Å—Ç–µ–º—ã:');
        if (window.handleMultipleYandexFileUpload) {
            console.log('   ‚úÖ handleMultipleYandexFileUpload: –Ω–∞–π–¥–µ–Ω–∞');
        } else {
            console.log('   ‚ùå handleMultipleYandexFileUpload: –ù–ï –ù–ê–ô–î–ï–ù–ê!');
        }
        
        // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º drag-drop —Å–∏—Å—Ç–µ–º—É
        console.log('üìã 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ drag-drop —Å–∏—Å—Ç–µ–º—ã:');
        const dragDropFields = document.querySelectorAll('input[type="file"][data-drag-drop-initialized]');
        console.log(`   –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª–µ–π: ${dragDropFields.length}`);
        
        // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è —Å—Å—ã–ª–æ–∫
        console.log('üìã 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –¥–ª—è —Å—Å—ã–ª–æ–∫:');
        const linkContainers = document.querySelectorAll('.yandex-file-links-container');
        console.log(`   –ù–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤: ${linkContainers.length}`);
        linkContainers.forEach((container, index) => {
            const field = container.getAttribute('data-field');
            console.log(`      ${index + 1}. –ü–æ–ª–µ: ${field}, –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: ${container.innerHTML.length > 0 ? '–µ—Å—Ç—å' : '–ø—É—Å—Ç–æ'}`);
        });
        
        // 6. –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
        console.log('üìã 6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏:');
        console.log('   –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: testFileUpload("screenshot_work_1")');
        console.log('   –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Å—ã–ª–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: checkFileLinks()');
        
        console.log('üöÄ === –ö–û–ù–ï–¶ –û–¢–õ–ê–î–ö–ò ===');
    }
    
    // –§—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
    function testFileUpload(fieldName) {
        console.log(`üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –¥–ª—è –ø–æ–ª—è: ${fieldName}`);
        
        const input = document.querySelector(`input[name="${fieldName}"]`);
        if (!input) {
            console.log(`‚ùå –ü–æ–ª–µ ${fieldName} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ`);
            return;
        }
        
        // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        const testFile = new File(['test content'], 'test-screenshot.jpg', { type: 'image/jpeg' });
        
        // –°–æ–∑–¥–∞–µ–º DataTransfer –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ñ–∞–π–ª–∞
        const dataTransfer = new DataTransfer();
        dataTransfer.items.add(testFile);
        input.files = dataTransfer.files;
        
        console.log(`üìÅ –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${testFile.name}`);
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–±—ã—Ç–∏–µ change
        const changeEvent = new Event('change', { bubbles: true });
        input.dispatchEvent(changeEvent);
        
        console.log(`üöÄ –°–æ–±—ã—Ç–∏–µ change –∑–∞–ø—É—â–µ–Ω–æ –¥–ª—è ${fieldName}`);
    }
    
    // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API
    async function testYandexAPI() {
        console.log('üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫ API...');
        
        try {
            const response = await fetch('/api/yandex-disk/health', {
                method: 'GET',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest',
                    'Accept': 'application/json'
                }
            });
            
            const data = await response.json();
            console.log('‚úÖ API –æ—Ç–≤–µ—Ç:', data);
        } catch (error) {
            console.log('‚ùå –û—à–∏–±–∫–∞ API:', error);
        }
    }
    
    // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫
    function checkFileLinks() {
        console.log('üîó === –ü–†–û–í–ï–†–ö–ê –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø –°–°–´–õ–û–ö ===');
        
        problemFields.forEach((fieldName, index) => {
            console.log(`üìã ${index + 1}. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—è: ${fieldName}`);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ PHP —Å—Å—ã–ª–∫–∏
            const input = document.querySelector(`input[name="${fieldName}"]`);
            if (input) {
                const container = input.closest('.col-md-6, .mb-3');
                if (container) {
                    const existingLinks = container.querySelectorAll('.existing-file-link');
                    const dynamicContainer = container.querySelector('.yandex-file-links-container');
                    const dynamicLinks = dynamicContainer ? dynamicContainer.querySelectorAll('.yandex-file-link, .file-success') : [];
                    
                    console.log(`   –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ PHP —Å—Å—ã–ª–∫–∏: ${existingLinks.length}`);
                    console.log(`   –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ JS —Å—Å—ã–ª–∫–∏: ${dynamicLinks.length}`);
                    console.log(`   –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫: ${dynamicContainer ? '–Ω–∞–π–¥–µ–Ω' : '–Ω–µ –Ω–∞–π–¥–µ–Ω'}`);
                    
                    if (existingLinks.length > 0) {
                        existingLinks.forEach((link, i) => {
                            const href = link.querySelector('a')?.href;
                            const visible = link.style.display !== 'none';
                            console.log(`      PHP —Å—Å—ã–ª–∫–∞ ${i + 1}: ${href} (${visible ? '–≤–∏–¥–∏–º–∞' : '—Å–∫—Ä—ã—Ç–∞'})`);
                        });
                    }
                    
                    if (dynamicLinks.length > 0) {
                        dynamicLinks.forEach((link, i) => {
                            const href = link.href || link.querySelector('a')?.href;
                            console.log(`      JS —Å—Å—ã–ª–∫–∞ ${i + 1}: ${href}`);
                        });
                    }
                }
            } else {
                console.log(`   ‚ùå –ü–æ–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ`);
            }
            console.log('');
        });
        
        console.log('üîó === –ö–û–ù–ï–¶ –ü–†–û–í–ï–†–ö–ò –°–°–´–õ–û–ö ===');
    }
    
    // –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Å—ã–ª–∫–∏
    function createTestLink(fieldName) {
        console.log(`üß™ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø–æ–ª—è: ${fieldName}`);
        
        const input = document.querySelector(`input[name="${fieldName}"]`);
        if (!input) {
            console.log(`‚ùå –ü–æ–ª–µ ${fieldName} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ`);
            return;
        }
        
        // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å—Å—ã–ª–∫—É
        const testUrl = 'https://yadi.sk/d/test-link-' + Date.now();
        const testName = '–¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª ' + fieldName + '.jpg';
        
        if (window.YandexDiskUniversal) {
            window.YandexDiskUniversal.updateFileLink(fieldName, testUrl, testName);
            console.log(`‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è —Å—Å—ã–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ —á–µ—Ä–µ–∑ YandexDiskUniversal`);
        } else {
            console.log(`‚ùå YandexDiskUniversal –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞`);
        }
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
    window.debugFileUpload = debugFileUploadSystem;
    window.testFileUpload = testFileUpload;
    window.testYandexAPI = testYandexAPI;
    window.checkFileLinks = checkFileLinks;
    window.createTestLink = createTestLink;
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –æ—Ç–ª–∞–¥–∫–∏ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
    setTimeout(() => {
        console.log('üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –æ—Ç–ª–∞–¥–∫–∏...');
        debugFileUploadSystem();
    }, 2000);
    
    console.log('üîß –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã. –î–æ—Å—Ç—É–ø–Ω—ã:');
    console.log('   debugFileUpload() - –ø–æ–ª–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞ —Å–∏—Å—Ç–µ–º—ã');
    console.log('   testFileUpload("field_name") - —Ç–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏');
    console.log('   testYandexAPI() - —Ç–µ—Å—Ç API');
    console.log('   checkFileLinks() - –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫');
    console.log('   createTestLink("field_name") - —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é —Å—Å—ã–ª–∫—É');
    
})();
