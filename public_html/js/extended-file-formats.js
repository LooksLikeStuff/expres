/**
 * –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–æ—Ä–º–∞—Ç–æ–≤ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ä–º–∞—Ç–æ–≤ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
 */
window.EXTENDED_FILE_FORMATS = {
    // –î–æ–∫—É–º–µ–Ω—Ç—ã –∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã
    documents: {
        'pdf': { 
            mime: ['application/pdf'], 
            icon: 'üìÑ', 
            description: 'PDF –¥–æ–∫—É–º–µ–Ω—Ç—ã' 
        },
        'doc': { 
            mime: ['application/msword'], 
            icon: 'üìù', 
            description: 'Microsoft Word (—Å—Ç–∞—Ä—ã–π)' 
        },
        'docx': { 
            mime: ['application/vnd.openxmlformats-officedocument.wordprocessingml.document'], 
            icon: 'üìù', 
            description: 'Microsoft Word' 
        },
        'odt': { 
            mime: ['application/vnd.oasis.opendocument.text'], 
            icon: 'üìù', 
            description: 'OpenDocument Text' 
        },
        'rtf': { 
            mime: ['application/rtf', 'text/rtf'], 
            icon: 'üìù', 
            description: 'Rich Text Format' 
        },
        'txt': { 
            mime: ['text/plain'], 
            icon: 'üìÑ', 
            description: '–¢–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã' 
        },
        'md': { 
            mime: ['text/markdown', 'text/x-markdown'], 
            icon: 'üìÑ', 
            description: 'Markdown —Ñ–∞–π–ª—ã' 
        }
    },

    // –¢–∞–±–ª–∏—Ü—ã –∏ –¥–∞–Ω–Ω—ã–µ
    spreadsheets: {
        'xls': { 
            mime: ['application/vnd.ms-excel'], 
            icon: 'üìä', 
            description: 'Microsoft Excel (—Å—Ç–∞—Ä—ã–π)' 
        },
        'xlsx': { 
            mime: ['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'], 
            icon: 'üìä', 
            description: 'Microsoft Excel' 
        },
        'ods': { 
            mime: ['application/vnd.oasis.opendocument.spreadsheet'], 
            icon: 'üìä', 
            description: 'OpenDocument Spreadsheet' 
        },
        'csv': { 
            mime: ['text/csv', 'application/csv'], 
            icon: 'üìä', 
            description: 'CSV –¥–∞–Ω–Ω—ã–µ' 
        },
        'tsv': { 
            mime: ['text/tab-separated-values'], 
            icon: 'üìä', 
            description: 'TSV –¥–∞–Ω–Ω—ã–µ' 
        }
    },

    // –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏
    presentations: {
        'ppt': { 
            mime: ['application/vnd.ms-powerpoint'], 
            icon: 'üìΩÔ∏è', 
            description: 'PowerPoint (—Å—Ç–∞—Ä—ã–π)' 
        },
        'pptx': { 
            mime: ['application/vnd.openxmlformats-officedocument.presentationml.presentation'], 
            icon: 'üìΩÔ∏è', 
            description: 'PowerPoint' 
        },
        'odp': { 
            mime: ['application/vnd.oasis.opendocument.presentation'], 
            icon: 'üìΩÔ∏è', 
            description: 'OpenDocument Presentation' 
        }
    },

    // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã)
    images: {
        'jpg': { 
            mime: ['image/jpeg'], 
            icon: 'üñºÔ∏è', 
            description: 'JPEG –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è' 
        },
        'jpeg': { 
            mime: ['image/jpeg'], 
            icon: 'üñºÔ∏è', 
            description: 'JPEG –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è' 
        },
        'png': { 
            mime: ['image/png'], 
            icon: 'üñºÔ∏è', 
            description: 'PNG –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è' 
        },
        'gif': { 
            mime: ['image/gif'], 
            icon: 'üéûÔ∏è', 
            description: 'GIF –∞–Ω–∏–º–∞—Ü–∏–∏' 
        },
        'bmp': { 
            mime: ['image/bmp', 'image/x-ms-bmp'], 
            icon: 'üñºÔ∏è', 
            description: 'BMP –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è' 
        },
        'webp': { 
            mime: ['image/webp'], 
            icon: 'üñºÔ∏è', 
            description: 'WebP –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è' 
        },
        'svg': { 
            mime: ['image/svg+xml'], 
            icon: 'üé®', 
            description: 'SVG –≤–µ–∫—Ç–æ—Ä–Ω–∞—è –≥—Ä–∞—Ñ–∏–∫–∞' 
        },
        'tiff': { 
            mime: ['image/tiff', 'image/tif'], 
            icon: 'üñºÔ∏è', 
            description: 'TIFF –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è' 
        },
        'tif': { 
            mime: ['image/tiff', 'image/tif'], 
            icon: 'üñºÔ∏è', 
            description: 'TIFF –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è' 
        },
        'ico': { 
            mime: ['image/x-icon', 'image/vnd.microsoft.icon'], 
            icon: 'üî≤', 
            description: '–ò–∫–æ–Ω–∫–∏' 
        }
    },

    // –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –≥—Ä–∞—Ñ–∏–∫–∞ –∏ –¥–∏–∑–∞–π–Ω
    design: {
        'psd': { 
            mime: ['application/x-photoshop', 'image/vnd.adobe.photoshop'], 
            icon: 'üé®', 
            description: 'Adobe Photoshop' 
        },
        'ai': { 
            mime: ['application/postscript', 'application/illustrator'], 
            icon: 'üé®', 
            description: 'Adobe Illustrator' 
        },
        'eps': { 
            mime: ['application/postscript'], 
            icon: 'üé®', 
            description: 'Encapsulated PostScript' 
        },
        'indd': { 
            mime: ['application/x-indesign'], 
            icon: 'üìñ', 
            description: 'Adobe InDesign' 
        },
        'sketch': { 
            mime: ['application/x-sketch'], 
            icon: 'üé®', 
            description: 'Sketch –¥–∏–∑–∞–π–Ω' 
        },
        'fig': { 
            mime: ['application/x-figma'], 
            icon: 'üé®', 
            description: 'Figma –¥–∏–∑–∞–π–Ω' 
        },
        'xd': { 
            mime: ['application/vnd.adobe.xd'], 
            icon: 'üé®', 
            description: 'Adobe XD' 
        }
    },

    // CAD –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ —Ñ–∞–π–ª—ã
    cad: {
        'dwg': { 
            mime: ['application/acad', 'image/vnd.dwg'], 
            icon: 'üìê', 
            description: 'AutoCAD —á–µ—Ä—Ç–µ–∂–∏' 
        },
        'dxf': { 
            mime: ['application/dxf', 'image/vnd.dxf'], 
            icon: 'üìê', 
            description: 'AutoCAD DXF' 
        },
        'dwf': { 
            mime: ['application/x-dwf'], 
            icon: 'üìê', 
            description: 'Design Web Format' 
        },
        'pln': { 
            mime: ['application/x-archicad'], 
            icon: 'üèóÔ∏è', 
            description: 'ArchiCAD –ø—Ä–æ–µ–∫—Ç—ã' 
        },
        'rvt': { 
            mime: ['application/x-revit'], 
            icon: 'üèóÔ∏è', 
            description: 'Autodesk Revit' 
        },
        'ifc': { 
            mime: ['application/x-step', 'model/ifc'], 
            icon: 'üèóÔ∏è', 
            description: 'Industry Foundation Classes' 
        },
        'step': { 
            mime: ['application/step'], 
            icon: 'üìê', 
            description: 'STEP 3D –º–æ–¥–µ–ª–∏' 
        },
        'stp': { 
            mime: ['application/step'], 
            icon: 'üìê', 
            description: 'STEP 3D –º–æ–¥–µ–ª–∏' 
        }
    },

    // 3D –º–æ–¥–µ–ª–∏ –∏ –∞–Ω–∏–º–∞—Ü–∏—è
    models3d: {
        '3ds': { 
            mime: ['application/x-3ds'], 
            icon: 'üé≠', 
            description: '3D Studio Max' 
        },
        'max': { 
            mime: ['application/x-3dsmax'], 
            icon: 'üé≠', 
            description: '3ds Max —Ñ–∞–π–ª—ã' 
        },
        'obj': { 
            mime: ['application/x-tgif'], 
            icon: 'üé≠', 
            description: 'Wavefront OBJ' 
        },
        'fbx': { 
            mime: ['application/x-fbx'], 
            icon: 'üé≠', 
            description: 'Autodesk FBX' 
        },
        'dae': { 
            mime: ['model/vnd.collada+xml'], 
            icon: 'üé≠', 
            description: 'COLLADA 3D' 
        },
        'blend': { 
            mime: ['application/x-blender'], 
            icon: 'üé≠', 
            description: 'Blender –ø—Ä–æ–µ–∫—Ç—ã' 
        },
        'ma': { 
            mime: ['application/x-maya'], 
            icon: 'üé≠', 
            description: 'Maya ASCII' 
        },
        'mb': { 
            mime: ['application/x-maya-binary'], 
            icon: 'üé≠', 
            description: 'Maya Binary' 
        },
        'c4d': { 
            mime: ['application/x-cinema4d'], 
            icon: 'üé≠', 
            description: 'Cinema 4D' 
        },
        'skp': { 
            mime: ['application/x-sketchup'], 
            icon: 'üé≠', 
            description: 'SketchUp' 
        }
    },

    // –í–∏–¥–µ–æ —Ñ–∞–π–ª—ã
    videos: {
        'mp4': { 
            mime: ['video/mp4'], 
            icon: 'üé¨', 
            description: 'MP4 –≤–∏–¥–µ–æ' 
        },
        'avi': { 
            mime: ['video/x-msvideo'], 
            icon: 'üé¨', 
            description: 'AVI –≤–∏–¥–µ–æ' 
        },
        'mov': { 
            mime: ['video/quicktime'], 
            icon: 'üé¨', 
            description: 'QuickTime –≤–∏–¥–µ–æ' 
        },
        'wmv': { 
            mime: ['video/x-ms-wmv'], 
            icon: 'üé¨', 
            description: 'Windows Media Video' 
        },
        'flv': { 
            mime: ['video/x-flv'], 
            icon: 'üé¨', 
            description: 'Flash Video' 
        },
        'webm': { 
            mime: ['video/webm'], 
            icon: 'üé¨', 
            description: 'WebM –≤–∏–¥–µ–æ' 
        },
        'mkv': { 
            mime: ['video/x-matroska'], 
            icon: 'üé¨', 
            description: 'Matroska Video' 
        },
        'mpg': { 
            mime: ['video/mpeg'], 
            icon: 'üé¨', 
            description: 'MPEG –≤–∏–¥–µ–æ' 
        },
        'mpeg': { 
            mime: ['video/mpeg'], 
            icon: 'üé¨', 
            description: 'MPEG –≤–∏–¥–µ–æ' 
        },
        '3gp': { 
            mime: ['video/3gpp'], 
            icon: 'üì±', 
            description: '3GPP –º–æ–±–∏–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ' 
        }
    },

    // –ê—É–¥–∏–æ —Ñ–∞–π–ª—ã
    audio: {
        'mp3': { 
            mime: ['audio/mpeg'], 
            icon: 'üéµ', 
            description: 'MP3 –∞—É–¥–∏–æ' 
        },
        'wav': { 
            mime: ['audio/wav', 'audio/x-wav'], 
            icon: 'üéµ', 
            description: 'WAV –∞—É–¥–∏–æ' 
        },
        'flac': { 
            mime: ['audio/flac'], 
            icon: 'üéµ', 
            description: 'FLAC –∞—É–¥–∏–æ' 
        },
        'aac': { 
            mime: ['audio/aac'], 
            icon: 'üéµ', 
            description: 'AAC –∞—É–¥–∏–æ' 
        },
        'ogg': { 
            mime: ['audio/ogg'], 
            icon: 'üéµ', 
            description: 'OGG –∞—É–¥–∏–æ' 
        },
        'm4a': { 
            mime: ['audio/m4a'], 
            icon: 'üéµ', 
            description: 'M4A –∞—É–¥–∏–æ' 
        },
        'wma': { 
            mime: ['audio/x-ms-wma'], 
            icon: 'üéµ', 
            description: 'Windows Media Audio' 
        }
    },

    // –ê—Ä—Ö–∏–≤—ã –∏ —Å–∂–∞—Ç—ã–µ —Ñ–∞–π–ª—ã
    archives: {
        'zip': { 
            mime: ['application/zip'], 
            icon: 'üì¶', 
            description: 'ZIP –∞—Ä—Ö–∏–≤—ã' 
        },
        'rar': { 
            mime: ['application/x-rar-compressed'], 
            icon: 'üì¶', 
            description: 'RAR –∞—Ä—Ö–∏–≤—ã' 
        },
        '7z': { 
            mime: ['application/x-7z-compressed'], 
            icon: 'üì¶', 
            description: '7-Zip –∞—Ä—Ö–∏–≤—ã' 
        },
        'tar': { 
            mime: ['application/x-tar'], 
            icon: 'üì¶', 
            description: 'TAR –∞—Ä—Ö–∏–≤—ã' 
        },
        'gz': { 
            mime: ['application/gzip'], 
            icon: 'üì¶', 
            description: 'GZIP –∞—Ä—Ö–∏–≤—ã' 
        },
        'bz2': { 
            mime: ['application/x-bzip2'], 
            icon: 'üì¶', 
            description: 'BZIP2 –∞—Ä—Ö–∏–≤—ã' 
        },
        'xz': { 
            mime: ['application/x-xz'], 
            icon: 'üì¶', 
            description: 'XZ –∞—Ä—Ö–∏–≤—ã' 
        }
    },

    // –ü—Ä–æ–≥—Ä–∞–º–º–Ω—ã–µ —Ñ–∞–π–ª—ã
    code: {
        'js': { 
            mime: ['application/javascript', 'text/javascript'], 
            icon: 'üíª', 
            description: 'JavaScript —Ñ–∞–π–ª—ã' 
        },
        'css': { 
            mime: ['text/css'], 
            icon: 'üé®', 
            description: 'CSS —Å—Ç–∏–ª–∏' 
        },
        'html': { 
            mime: ['text/html'], 
            icon: 'üåê', 
            description: 'HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã' 
        },
        'php': { 
            mime: ['application/x-php', 'text/x-php'], 
            icon: 'üíª', 
            description: 'PHP —Å–∫—Ä–∏–ø—Ç—ã' 
        },
        'py': { 
            mime: ['text/x-python'], 
            icon: 'üêç', 
            description: 'Python —Å–∫—Ä–∏–ø—Ç—ã' 
        },
        'java': { 
            mime: ['text/x-java-source'], 
            icon: '‚òï', 
            description: 'Java –∏—Å—Ö–æ–¥–Ω–∏–∫–∏' 
        },
        'cpp': { 
            mime: ['text/x-c++src'], 
            icon: 'üíª', 
            description: 'C++ –∏—Å—Ö–æ–¥–Ω–∏–∫–∏' 
        },
        'c': { 
            mime: ['text/x-csrc'], 
            icon: 'üíª', 
            description: 'C –∏—Å—Ö–æ–¥–Ω–∏–∫–∏' 
        },
        'json': { 
            mime: ['application/json'], 
            icon: 'üìã', 
            description: 'JSON –¥–∞–Ω–Ω—ã–µ' 
        },
        'xml': { 
            mime: ['application/xml', 'text/xml'], 
            icon: 'üìã', 
            description: 'XML –¥–∞–Ω–Ω—ã–µ' 
        },
        'sql': { 
            mime: ['application/sql'], 
            icon: 'üóÑÔ∏è', 
            description: 'SQL —Å–∫—Ä–∏–ø—Ç—ã' 
        }
    },

    // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∏ –ø—Ä–æ—á–∏–µ —Ñ–æ—Ä–º–∞—Ç—ã
    special: {
        'eml': { 
            mime: ['message/rfc822'], 
            icon: 'üìß', 
            description: 'Email —Ñ–∞–π–ª—ã' 
        },
        'msg': { 
            mime: ['application/vnd.ms-outlook'], 
            icon: 'üìß', 
            description: 'Outlook —Å–æ–æ–±—â–µ–Ω–∏—è' 
        },
        'vcf': { 
            mime: ['text/vcard'], 
            icon: 'üë§', 
            description: '–ö–æ–Ω—Ç–∞–∫—Ç—ã vCard' 
        },
        'ics': { 
            mime: ['text/calendar'], 
            icon: 'üìÖ', 
            description: '–ö–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è' 
        },
        'torrent': { 
            mime: ['application/x-bittorrent'], 
            icon: 'üåê', 
            description: 'BitTorrent —Ñ–∞–π–ª—ã' 
        },
        'iso': { 
            mime: ['application/x-iso9660-image'], 
            icon: 'üíø', 
            description: 'ISO –æ–±—Ä–∞–∑—ã –¥–∏—Å–∫–æ–≤' 
        },
        'dmg': { 
            mime: ['application/x-apple-diskimage'], 
            icon: 'üíø', 
            description: 'macOS –æ–±—Ä–∞–∑—ã –¥–∏—Å–∫–æ–≤' 
        }
    }
};

/**
 * –ö–ª–∞—Å—Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–∞–π–ª–æ–≤
 */
class ExtendedFileValidator {
    constructor() {
        this.allFormats = this.combineAllFormats();
        this.maxFileSize = 500 * 1024 * 1024; // 500MB
        this.allowedCategories = ['all']; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    }

    /**
     * –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ –≤ –æ–¥–∏–Ω –æ–±—ä–µ–∫—Ç
     */
    combineAllFormats() {
        const combined = {};
        Object.values(window.EXTENDED_FILE_FORMATS).forEach(category => {
            Object.assign(combined, category);
        });
        return combined;
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
     */
    getAllExtensions() {
        return Object.keys(this.allFormats);
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
     */
    getExtensionsByCategories(categories = ['all']) {
        if (categories.includes('all')) {
            return this.getAllExtensions();
        }

        const extensions = [];
        categories.forEach(category => {
            if (window.EXTENDED_FILE_FORMATS[category]) {
                extensions.push(...Object.keys(window.EXTENDED_FILE_FORMATS[category]));
            }
        });
        return [...new Set(extensions)]; // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ MIME —Ç–∏–ø–æ–≤
     */
    getAllMimeTypes() {
        const mimeTypes = [];
        Object.values(this.allFormats).forEach(format => {
            mimeTypes.push(...format.mime);
        });
        return [...new Set(mimeTypes)]; // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
    }

    /**
     * –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∞–π–ª–∞
     */
    validateFile(file, allowedCategories = ['all']) {
        const result = {
            valid: false,
            error: null,
            warning: null,
            fileInfo: {
                name: file.name,
                size: file.size,
                type: file.type,
                extension: this.getFileExtension(file.name),
                icon: 'üìÑ',
                description: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞'
            }
        };

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
        if (file.size > this.maxFileSize) {
            result.error = `–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: ${this.formatFileSize(this.maxFileSize)}`;
            return result;
        }

        if (file.size === 0) {
            result.error = '–§–∞–π–ª –ø—É—Å—Ç–æ–π';
            return result;
        }

        // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ–∞–π–ª–∞
        const extension = this.getFileExtension(file.name).toLowerCase();
        if (!extension) {
            result.error = '–§–∞–π–ª –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è';
            return result;
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
        const allowedExtensions = this.getExtensionsByCategories(allowedCategories);
        if (!allowedExtensions.includes(extension)) {
            result.error = `–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞. –†–∞–∑—Ä–µ—à–µ–Ω—ã: ${allowedExtensions.slice(0, 10).join(', ')}${allowedExtensions.length > 10 ? '...' : ''}`;
            return result;
        }

        // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–æ—Ä–º–∞—Ç–µ
        const formatInfo = this.allFormats[extension];
        if (formatInfo) {
            result.fileInfo.icon = formatInfo.icon;
            result.fileInfo.description = formatInfo.description;

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ MIME —Ç–∏–ø–∞
            if (file.type && !formatInfo.mime.includes(file.type)) {
                result.warning = `MIME —Ç–∏–ø –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é —Ñ–∞–π–ª–∞`;
            }
        }

        result.valid = true;
        return result;
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ–∞–π–ª–∞
     */
    getFileExtension(filename) {
        return filename.split('.').pop() || '';
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
     */
    formatFileSize(bytes) {
        const sizes = ['–ë–∞–π—Ç', '–ö–ë', '–ú–ë', '–ì–ë'];
        if (bytes === 0) return '0 –ë–∞–π—Ç';
        const i = Math.floor(Math.log(bytes) / Math.log(1024));
        return Math.round(bytes / Math.pow(1024, i) * 100) / 100 + ' ' + sizes[i];
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ accept –∞—Ç—Ä–∏–±—É—Ç–∞ –¥–ª—è input —Ñ–∞–π–ª–∞
     */
    getAcceptAttribute(categories = ['all']) {
        const extensions = this.getExtensionsByCategories(categories);
        return extensions.map(ext => `.${ext}`).join(',');
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ HTML —Å–ø–∏—Å–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
     */
    getFormatsListHTML(categories = ['all']) {
        const categoriesToShow = categories.includes('all') ? 
            Object.keys(window.EXTENDED_FILE_FORMATS) : categories;

        let html = '<div class="supported-formats-list">';
        
        categoriesToShow.forEach(categoryKey => {
            const category = window.EXTENDED_FILE_FORMATS[categoryKey];
            if (!category) return;

            html += `<div class="format-category">`;
            html += `<h6 class="category-title">${this.getCategoryTitle(categoryKey)}</h6>`;
            html += `<div class="format-items">`;
            
            Object.entries(category).forEach(([ext, info]) => {
                html += `<span class="format-item" title="${info.description}">`;
                html += `${info.icon} .${ext}`;
                html += `</span>`;
            });
            
            html += `</div></div>`;
        });
        
        html += '</div>';
        return html;
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     */
    getCategoryTitle(categoryKey) {
        const titles = {
            'documents': 'üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã',
            'spreadsheets': 'üìä –¢–∞–±–ª–∏—Ü—ã',
            'presentations': 'üìΩÔ∏è –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏',
            'images': 'üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è',
            'design': 'üé® –î–∏–∑–∞–π–Ω',
            'cad': 'üìê CAD —Ñ–∞–π–ª—ã',
            'models3d': 'üé≠ 3D –º–æ–¥–µ–ª–∏',
            'videos': 'üé¨ –í–∏–¥–µ–æ',
            'audio': 'üéµ –ê—É–¥–∏–æ',
            'archives': 'üì¶ –ê—Ä—Ö–∏–≤—ã',
            'code': 'üíª –ö–æ–¥',
            'special': 'üîß –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ'
        };
        return titles[categoryKey] || categoryKey;
    }

    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
     */
    setMaxFileSize(sizeInBytes) {
        this.maxFileSize = sizeInBytes;
    }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞
window.extendedFileValidator = new ExtendedFileValidator();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–∏—Å—Ç–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
function updateFileUploadSystems() {
    console.log('üîÑ [ExtendedFileValidator] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤...');

    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ input[type="file"]
    document.querySelectorAll('input[type="file"]').forEach(input => {
        if (!input.hasAttribute('data-extended-validation')) {
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π accept
            const accept = window.extendedFileValidator.getAcceptAttribute();
            input.setAttribute('accept', accept);
            input.setAttribute('data-extended-validation', 'true');

            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
            input.addEventListener('change', function(e) {
                const files = Array.from(e.target.files);
                files.forEach(file => {
                    const validation = window.extendedFileValidator.validateFile(file);
                    if (!validation.valid) {
                        console.error('‚ùå [FileValidation]', validation.error);
                        alert(`–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–∞–π–ª–∞ "${file.name}": ${validation.error}`);
                        e.target.value = ''; // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ
                    } else {
                        console.log('‚úÖ [FileValidation]', `–§–∞–π–ª "${file.name}" (${validation.fileInfo.description}) –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é`);
                        if (validation.warning) {
                            console.warn('‚ö†Ô∏è [FileValidation]', validation.warning);
                        }
                    }
                });
            });

            console.log('‚úÖ [ExtendedFileValidator] –û–±–Ω–æ–≤–ª–µ–Ω input:', input);
        }
    });

    // –û–±–Ω–æ–≤–ª—è–µ–º drag-and-drop –∑–æ–Ω—ã
    document.querySelectorAll('[data-drag-drop="true"], .drag-drop-zone').forEach(zone => {
        if (!zone.hasAttribute('data-extended-validation')) {
            zone.setAttribute('data-extended-validation', 'true');

            // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ drop —Å–æ–±—ã—Ç–∏—è
            const originalDropHandler = zone.ondrop;
            zone.ondrop = function(e) {
                e.preventDefault();
                const files = Array.from(e.dataTransfer.files);
                
                // –í–∞–ª–∏–¥–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª
                const validFiles = [];
                files.forEach(file => {
                    const validation = window.extendedFileValidator.validateFile(file);
                    if (validation.valid) {
                        validFiles.push(file);
                        console.log('‚úÖ [DragDropValidation]', `–§–∞–π–ª "${file.name}" –≥–æ—Ç–æ–≤ –∫ –∑–∞–≥—Ä—É–∑–∫–µ`);
                    } else {
                        console.error('‚ùå [DragDropValidation]', validation.error);
                        alert(`–û—à–∏–±–∫–∞: ${validation.error}`);
                    }
                });

                // –ü–µ—Ä–µ–¥–∞–µ–º —Ç–æ–ª—å–∫–æ –≤–∞–ª–∏–¥–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
                if (validFiles.length > 0 && originalDropHandler) {
                    const modifiedEvent = Object.assign({}, e);
                    modifiedEvent.dataTransfer = {
                        ...e.dataTransfer,
                        files: validFiles
                    };
                    originalDropHandler.call(this, modifiedEvent);
                }
            };

            console.log('‚úÖ [ExtendedFileValidator] –û–±–Ω–æ–≤–ª–µ–Ω–∞ drag-drop –∑–æ–Ω–∞:', zone);
        }
    });
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', function() {
    setTimeout(updateFileUploadSystems, 500);
});

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
if (typeof $ !== 'undefined') {
    $(document).on('shown.bs.modal', function() {
        setTimeout(updateFileUploadSystems, 300);
    });
}

// –ù–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ DOM
const fileInputObserver = new MutationObserver(function(mutations) {
    let needsUpdate = false;
    
    mutations.forEach(function(mutation) {
        if (mutation.addedNodes.length) {
            for (let node of mutation.addedNodes) {
                if (node.nodeType === 1 && (
                    node.tagName === 'INPUT' && node.type === 'file' ||
                    node.querySelector && node.querySelector('input[type="file"]')
                )) {
                    needsUpdate = true;
                    break;
                }
            }
        }
    });
    
    if (needsUpdate) {
        setTimeout(updateFileUploadSystems, 100);
    }
});

fileInputObserver.observe(document.body, {
    childList: true,
    subtree: true
});

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
window.updateFileUploadSystems = updateFileUploadSystems;
window.ExtendedFileValidator = ExtendedFileValidator;
