/**
 * –°–∏—Å—Ç–µ–º–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫ v3.0
 * –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤ –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ñ–æ—Ä–º–æ–π —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–¥–µ–ª–∫–∏
 */
class YandexDiskUploaderV3 {
    constructor() {
        this.apiEndpoints = {
            upload: '/api/yandex-disk/upload',
            delete: '/api/yandex-disk/delete', 
            info: '/api/yandex-disk/info',
            health: '/api/yandex-disk/health'
        };
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏
        this.settings = {
            maxFileSize: 2 * 1024 * 1024 * 1024, // 2GB
            maxRetries: 3,
            retryDelay: 2000,
            timeout: 0, // –ë–µ–∑ —Ç–∞–π–º–∞—É—Ç–∞
            supportedFields: [
                'measurements_file',
                'final_project_file', 
                'work_act',
                'chat_screenshot',
                'archicad_file',
                'execution_order_file',
                'final_floorplan',
                'final_collage',
                'contract_attachment',
                'plan_final',
                'screenshot_work_1',
                'screenshot_work_2',
                'screenshot_work_3',
                'screenshot_final'
            ]
        };
        
        // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–æ–∫
        this.activeUploads = new Map();
        this.uploadProgress = new Map();
        this.isInitialized = false;
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        this.init();
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∑–∞–≥—Ä—É–∑–∫–∏
     */
    async init() {
        console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è YandexDiskUploaderV3...');
        
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
            await this.checkHealth();
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
            this.initEventHandlers();
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å—Å—ã–ª–æ–∫
            this.initExistingLinks();
            
            this.isInitialized = true;
            console.log('‚úÖ YandexDiskUploaderV3 —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
            
            // –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π
            window.YandexDiskUniversal = this;
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ YandexDiskUploaderV3:', error);
        }
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è API
     */
    async checkHealth() {
        try {
            const response = await fetch(this.apiEndpoints.health, {
                method: 'GET',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest',
                    'Content-Type': 'application/json'
                }
            });
            
            if (!response.ok) {
                throw new Error(`API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ: ${response.status}`);
            }
            
            const data = await response.json();
            console.log('‚úÖ Yandex Disk API –¥–æ—Å—Ç—É–ø–Ω–æ:', data);
            
        } catch (error) {
            console.warn('‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: Yandex Disk API –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ:', error);
            // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é, API –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ–∑–∂–µ
        }
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
     */
    initEventHandlers() {
        document.addEventListener('change', (event) => {
            const input = event.target;
            
            if (input.type === 'file' && this.isYandexField(input)) {
                this.handleFileSelect(input);
            }
        });
        
        console.log('üîß –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞, –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –ª–∏ –ø–æ–ª–µ –∫ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫—É
     */
    isYandexField(input) {
        return input.classList.contains('yandex-upload') ||
               input.getAttribute('data-upload-type') === 'yandex' ||
               this.settings.supportedFields.includes(input.name);
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
     */
    async handleFileSelect(input) {
        const file = input.files[0];
        if (!file) return;
        
        const fieldName = input.name;
        console.log(`üìÅ –í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏: ${fieldName} - ${file.name}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        if (file.size > this.settings.maxFileSize) {
            this.showError(fieldName, `–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: ${this.formatBytes(this.settings.maxFileSize)}`);
            return;
        }
        
        // –ü–æ–ª—É—á–∞–µ–º ID —Å–¥–µ–ª–∫–∏
        const dealId = this.getDealId();
        if (!dealId) {
            this.showError(fieldName, '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å ID —Å–¥–µ–ª–∫–∏');
            return;
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        this.showLoadingIndicator(fieldName, file.name);
        
        try {
            // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª
            const result = await this.uploadFile(file, dealId, fieldName);
            
            if (result.success) {
                console.log(`‚úÖ –§–∞–π–ª ${fieldName} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω`);
                this.showSuccess(fieldName, result.data);
                this.updateFileLink(fieldName, result.data.yandex_disk_url, result.data.original_name);
            } else {
                throw new Error(result.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏');
            }
            
        } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ ${fieldName}:`, error);
            this.showError(fieldName, error.message);
        } finally {
            this.hideLoadingIndicator(fieldName);
        }
    }
    
    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫
     */
    async uploadFile(file, dealId, fieldName) {
        return new Promise((resolve, reject) => {
            const formData = new FormData();
            formData.append('file', file);
            formData.append('deal_id', dealId);
            formData.append('field_name', fieldName);
            
            const xhr = new XMLHttpRequest();
            
            // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
            xhr.upload.addEventListener('progress', (event) => {
                if (event.lengthComputable) {
                    const percentComplete = (event.loaded / event.total) * 100;
                    this.updateProgress(fieldName, percentComplete);
                }
            });
            
            xhr.addEventListener('load', () => {
                if (xhr.status === 200) {
                    try {
                        const response = JSON.parse(xhr.responseText);
                        resolve(response);
                    } catch (error) {
                        reject(new Error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞'));
                    }
                } else {
                    reject(new Error(`–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${xhr.status}`));
                }
            });
            
            xhr.addEventListener('error', () => {
                reject(new Error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏'));
            });
            
            xhr.addEventListener('timeout', () => {
                reject(new Error('–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è'));
            });
            
            xhr.open('POST', this.apiEndpoints.upload);
            xhr.setRequestHeader('X-CSRF-TOKEN', document.querySelector('meta[name="csrf-token"]').getAttribute('content'));
            xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
            
            xhr.send(formData);
        });
    }
    
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ ID —Å–¥–µ–ª–∫–∏ –∏–∑ DOM
     */
    getDealId() {
        // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–µ–Ω–∏—è ID —Å–¥–µ–ª–∫–∏
        const dealIdField = document.querySelector('input[name="deal_id"]') || 
                           document.getElementById('dealIdField');
        
        if (dealIdField && dealIdField.value) {
            return dealIdField.value;
        }
        
        // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–∑ URL
        const urlMatch = window.location.href.match(/\/deal\/(\d+)/);
        if (urlMatch) {
            return urlMatch[1];
        }
        
        return null;
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
     */
    showLoadingIndicator(fieldName, fileName) {
        const container = this.getOrCreateLinkContainer(fieldName);
        const loadingHtml = `
            <div class="yandex-upload-progress" data-field="${fieldName}">
                <div class="upload-info">
                    <i class="fas fa-cloud-upload-alt upload-icon"></i>
                    <span class="upload-text">–ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è: ${fileName}</span>
                </div>
                <div class="progress">
                    <div class="progress-bar progress-bar-striped progress-bar-animated" 
                         role="progressbar" style="width: 0%"></div>
                </div>
            </div>
        `;
        container.innerHTML = loadingHtml;
    }
    
    /**
     * –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏
     */
    updateProgress(fieldName, percent) {
        const progressBar = document.querySelector(`.yandex-upload-progress[data-field="${fieldName}"] .progress-bar`);
        if (progressBar) {
            progressBar.style.width = `${percent}%`;
            progressBar.setAttribute('aria-valuenow', percent);
        }
    }
    
    /**
     * –°–∫—Ä—ã—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
     */
    hideLoadingIndicator(fieldName) {
        const progressIndicator = document.querySelector(`.yandex-upload-progress[data-field="${fieldName}"]`);
        if (progressIndicator) {
            progressIndicator.remove();
        }
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —É—Å–ø–µ—à–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
     */
    showSuccess(fieldName, data) {
        const container = this.getOrCreateLinkContainer(fieldName);
        const successHtml = `
            <div class="upload-success-message" data-field="${fieldName}">
                <i class="fas fa-check-circle text-success"></i>
                <span class="text-success">–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!</span>
            </div>
        `;
        
        // –í—Ä–µ–º–µ–Ω–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        const tempDiv = document.createElement('div');
        tempDiv.innerHTML = successHtml;
        container.appendChild(tempDiv.firstElementChild);
        
        // –£–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            const successMessage = container.querySelector('.upload-success-message');
            if (successMessage) {
                successMessage.remove();
            }
        }, 3000);
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É
     */
    showError(fieldName, errorMessage) {
        const container = this.getOrCreateLinkContainer(fieldName);
        const errorHtml = `
            <div class="upload-error-message" data-field="${fieldName}">
                <i class="fas fa-exclamation-triangle text-danger"></i>
                <span class="text-danger">–û—à–∏–±–∫–∞: ${errorMessage}</span>
            </div>
        `;
        container.innerHTML = errorHtml;
        
        // –£–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            const errorElement = container.querySelector('.upload-error-message');
            if (errorElement) {
                errorElement.remove();
            }
        }, 5000);
    }
    
    /**
     * –û–±–Ω–æ–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª
     */
    updateFileLink(fieldName, url, fileName) {
        const container = this.getOrCreateLinkContainer(fieldName);
        
        // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å—Å—ã–ª–æ–∫
        container.innerHTML = '';
        
        if (url && fileName) {
            const linkHtml = `
                <div class="yandex-file-link-wrapper" data-field="${fieldName}">
                    <a href="${url}" target="_blank" class="yandex-file-link file-success">
                        <i class="fas fa-external-link-alt"></i>
                        ${fileName}
                    </a>
                    <button type="button" class="btn btn-sm btn-outline-danger delete-file-btn" 
                            data-field="${fieldName}" title="–£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª">
                        <i class="fas fa-trash-alt"></i>
                    </button>
                </div>
            `;
            container.innerHTML = linkHtml;
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ—è–≤–ª–µ–Ω–∏—è
            const linkWrapper = container.querySelector('.yandex-file-link-wrapper');
            linkWrapper.style.animation = 'slideInUp 0.5s ease-out';
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è
            const deleteBtn = container.querySelector('.delete-file-btn');
            if (deleteBtn) {
                deleteBtn.addEventListener('click', () => this.deleteFile(fieldName));
            }
        }
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å—Å—ã–ª–æ–∫
     */
    getOrCreateLinkContainer(fieldName) {
        let container = document.querySelector(`.yandex-file-links-container[data-field="${fieldName}"]`);
        
        if (!container) {
            // –ò—â–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ —Ñ–∞–π–ª–∞
            const fileInput = document.querySelector(`input[name="${fieldName}"]`);
            if (fileInput) {
                // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–æ—Å–ª–µ –ø–æ–ª—è –≤–≤–æ–¥–∞
                container = document.createElement('div');
                container.className = 'yandex-file-links-container';
                container.setAttribute('data-field', fieldName);
                
                // –í—Å—Ç–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–æ—Å–ª–µ –ø–æ–ª—è –≤–≤–æ–¥–∞
                fileInput.parentNode.insertBefore(container, fileInput.nextSibling);
            } else {
                console.warn(`–ü–æ–ª–µ ${fieldName} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ`);
                return document.createElement('div'); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π div
            }
        }
        
        return container;
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å—Å—ã–ª–æ–∫
     */
    initExistingLinks() {
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–¥–µ–ª–∫–∏ –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏–ª–∏ DOM
        const dealData = window.dealData || this.extractDealDataFromForm();
        
        if (dealData) {
            this.settings.supportedFields.forEach(fieldName => {
                const urlField = `yandex_url_${fieldName}`;
                const nameField = `original_name_${fieldName}`;
                
                if (dealData[urlField] && dealData[nameField]) {
                    this.updateFileLink(fieldName, dealData[urlField], dealData[nameField]);
                }
            });
        }
    }
    
    /**
     * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å–¥–µ–ª–∫–∏ –∏–∑ —Ñ–æ—Ä–º—ã
     */
    extractDealDataFromForm() {
        const form = document.querySelector('form');
        if (!form) return null;
        
        const dealData = {};
        const inputs = form.querySelectorAll('input[type="hidden"]');
        
        inputs.forEach(input => {
            if (input.name.startsWith('yandex_url_') || input.name.startsWith('original_name_')) {
                dealData[input.name] = input.value;
            }
        });
        
        return dealData;
    }
    
    /**
     * –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
     */
    async deleteFile(fieldName) {
        if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ñ–∞–π–ª?')) {
            return;
        }
        
        try {
            const dealId = this.getDealId();
            const response = await fetch(this.apiEndpoints.delete, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    deal_id: dealId,
                    field_name: fieldName
                })
            });
            
            const result = await response.json();
            
            if (result.success) {
                this.updateFileLink(fieldName, null, null);
                console.log(`‚úÖ –§–∞–π–ª ${fieldName} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω`);
            } else {
                throw new Error(result.error || '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞');
            }
            
        } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞ ${fieldName}:`, error);
            alert(`–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞: ${error.message}`);
        }
    }
    
    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
     */
    formatBytes(bytes, decimals = 2) {
        if (bytes === 0) return '0 Bytes';
        
        const k = 1024;
        const dm = decimals < 0 ? 0 : decimals;
        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
        
        const i = Math.floor(Math.log(bytes) / Math.log(k));
        
        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', function() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ jQuery –∑–∞–≥—Ä—É–∂–µ–Ω
    if (typeof $ === 'undefined') {
        console.warn('‚ö†Ô∏è jQuery –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω, YandexDiskUploaderV3 –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –∑–∞–≥—Ä—É–∑–∫–∏
    window.yandexDiskUploader = new YandexDiskUploaderV3();
});
