/**
 * –ü—Ä–æ—Å—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç—ã —Å –±—Ä–∏—Ñ–∞–º–∏
 * –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∏ –ø–æ–Ω—è—Ç–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è
 */

(function() {
    'use strict';

    // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    let isLoading = false;

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    document.addEventListener('DOMContentLoaded', function() {
        console.log('üîç –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Å—Ç–æ–π —Å–∏—Å—Ç–µ–º—ã –±—Ä–∏—Ñ–æ–≤');
        initializeBriefSystem();
    });

    /**
     * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
     */
    function initializeBriefSystem() {
        const searchBtn = document.getElementById('searchBriefBtn');
        const detachBtn = document.getElementById('detachBriefBtn');

        // –ö–Ω–æ–ø–∫–∞ –ø–æ–∏—Å–∫–∞ –±—Ä–∏—Ñ–æ–≤
        if (searchBtn) {
            searchBtn.addEventListener('click', function() {
                const dealId = this.getAttribute('data-deal-id');
                const clientPhone = this.getAttribute('data-client-phone');

                if (!clientPhone) {
                    showMessage('–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω', 'error');
                    return;
                }

                searchBriefs(dealId, clientPhone);
            });
        }

        // –ö–Ω–æ–ø–∫–∞ –æ—Ç–≤—è–∑–∫–∏ –±—Ä–∏—Ñ–∞
        if (detachBtn) {
            detachBtn.addEventListener('click', function() {
                const dealId = this.getAttribute('data-deal-id');

                if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–≤—è–∑–∞—Ç—å –±—Ä–∏—Ñ –æ—Ç —Å–¥–µ–ª–∫–∏?')) {
                    detachBrief(dealId);
                }
            });
        }

        console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –±—Ä–∏—Ñ–æ–≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    }

    /**
     * –ü–æ–∏—Å–∫ –±—Ä–∏—Ñ–æ–≤ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞
     */
    async function searchBriefs(dealId, clientPhone) {
        if (isLoading) return;

        isLoading = true;
        const searchBtn = document.getElementById('searchBriefBtn');
        const resultsContainer = document.getElementById('briefSearchResults');
        const resultsList = document.getElementById('briefResultsList');

        console.log('üîç –ù–∞—á–∞–ª–æ –ø–æ–∏—Å–∫–∞ –±—Ä–∏—Ñ–æ–≤', { dealId, clientPhone });

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
        if (searchBtn) {
            searchBtn.disabled = true;
            searchBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> –ü–æ–∏—Å–∫...';
        }

        try {
            const requestData = {
                client_phone: clientPhone
            };

            console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', {
                url: `/api/deals/${dealId}/search-briefs`,
                data: requestData
            });

            const response = await fetch(`/api/deals/${dealId}/search-briefs`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': getCsrfToken(),
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify(requestData)
            });

            console.log('üì• –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', {
                status: response.status,
                statusText: response.statusText,
                ok: response.ok
            });

            const data = await response.json();
            console.log('üìã –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:', data);

            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ –±—Ä–∏—Ñ–æ–≤
            if (data.briefs && data.briefs.length > 0) {
                console.log('üîç –û–±—â–∏–µ –±—Ä–∏—Ñ—ã –∏ –∏—Ö —Å—Ç–∞—Ç—É—Å—ã:');
                data.briefs.forEach(brief => {
                    console.log(`  - –ë—Ä–∏—Ñ #${brief.id}: —Å—Ç–∞—Ç—É—Å "${brief.status}", –º–æ–∂–Ω–æ –ø—Ä–∏–≤—è–∑–∞—Ç—å: ${brief.can_attach}`);
                });
            }

            if (data.commercials && data.commercials.length > 0) {
                console.log('üîç –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ –±—Ä–∏—Ñ—ã –∏ –∏—Ö —Å—Ç–∞—Ç—É—Å—ã:');
                data.commercials.forEach(brief => {
                    console.log(`  - –ë—Ä–∏—Ñ #${brief.id}: —Å—Ç–∞—Ç—É—Å "${brief.status}", –º–æ–∂–Ω–æ –ø—Ä–∏–≤—è–∑–∞—Ç—å: ${brief.can_attach}`);
                });
            }

            console.log(response.ok, data.success);
            if (response.ok && data.success) {
                displayBriefResults(data, dealId);
                showMessage(`–ù–∞–π–¥–µ–Ω–æ –±—Ä–∏—Ñ–æ–≤: ${data.total_found || 0}`, 'success');
            } else {
                console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ —Å–µ—Ä–≤–µ—Ä–∞:', data);
                throw new Error(data.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –±—Ä–∏—Ñ–æ–≤');
            }

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –±—Ä–∏—Ñ–æ–≤:', error);
            showMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –±—Ä–∏—Ñ–æ–≤: ' + error.message, 'error');

            if (resultsContainer) {
                resultsContainer.style.display = 'none';
            }
        } finally {
            isLoading = false;

            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
            if (searchBtn) {
                searchBtn.disabled = false;
                searchBtn.innerHTML = '–ù–∞–π—Ç–∏ –±—Ä–∏—Ñ—ã';
            }
        }
    }

    /**
     * –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
     */
    function displayBriefResults(data, dealId) {
        const resultsContainer = document.getElementById('briefSearchResults');
        const resultsList = document.getElementById('briefResultsList');

        if (!resultsContainer || !resultsList) {
            console.error('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            return;
        }

        // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        resultsList.innerHTML = '';

        // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –±—Ä–∏—Ñ—ã –≤ –æ–¥–∏–Ω –º–∞—Å—Å–∏–≤
        const allBriefs = [];

        // –ù–æ–≤—ã–µ —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –±—Ä–∏—Ñ—ã
        if (data.briefs && data.briefs.length > 0) {
            data.briefs.forEach(brief => {
                allBriefs.push({
                    ...brief,
                    type: brief.type,
                    type_name: brief.type === 'common' ? '–û–±—â–∏–π –±—Ä–∏—Ñ' : '–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π –±—Ä–∏—Ñ',
                    system: 'unified'
                });
            });
        }

        if (allBriefs.length === 0) {
            resultsList.innerHTML = `
                <div style="padding: 20px; text-align: center; color: #6c757d;">
                    <i class="fas fa-search" style="font-size: 24px; margin-bottom: 8px;"></i>
                    <p>–ë—Ä–∏—Ñ—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ <strong>${data.searched_phone || ''}</strong></p>
                    <small>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–∫–∞–∑–∞—Ç—å –Ω–æ–º–µ—Ä –≤ –¥—Ä—É–≥–æ–º —Ñ–æ—Ä–º–∞—Ç–µ</small>
                </div>
            `;
        } else {
            // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –±—Ä–∏—Ñ—ã
            allBriefs.forEach(brief => {
                const briefElement = createBriefElement(brief, dealId);
                resultsList.appendChild(briefElement);
            });
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
        resultsContainer.style.display = 'block';
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –±—Ä–∏—Ñ–∞
     */
    function createBriefElement(brief, dealId) {
        const element = document.createElement('div');
        element.className = 'brief-item mb-3';
        element.style.cssText = 'border: 1px solid #dee2e6; border-radius: 8px; padding: 16px; background: #fff;';

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–æ–∂–Ω–æ –ª–∏ –ø—Ä–∏–≤—è–∑–∞—Ç—å –±—Ä–∏—Ñ
        let isAttachable = false;
        let canAttach = false;

        if (brief.system === 'unified') {
            // –î–ª—è –Ω–æ–≤—ã—Ö —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –±—Ä–∏—Ñ–æ–≤
            isAttachable = brief.status === 'completed';
            canAttach = isAttachable && !brief.already_linked;
        } else {
            // –î–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∏—Ñ–æ–≤ (legacy)
            const attachableStatuses = ['–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π', '–ó–∞–≤–µ—Ä—à–µ–Ω', 'completed', '–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π'];
            isAttachable = attachableStatuses.includes(brief.status);
            canAttach = isAttachable && !brief.already_linked;
        }

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –∏ —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞
        let statusColor, statusText;
        if (brief.already_linked) {
            statusColor = '#6c757d'; // —Å–µ—Ä—ã–π
            statusText = '–£–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω';
        } else if (brief.system === 'unified' && brief.status === 'completed') {
            statusColor = '#28a745'; // –∑–µ–ª–µ–Ω—ã–π
            statusText = '–ó–∞–≤–µ—Ä—à–µ–Ω - –º–æ–∂–Ω–æ –ø—Ä–∏–≤—è–∑–∞—Ç—å';
        } else if (brief.system === 'legacy' && (brief.status === '–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π' || brief.status === '–ó–∞–≤–µ—Ä—à–µ–Ω' || brief.status === 'completed')) {
            statusColor = '#28a745'; // –∑–µ–ª–µ–Ω—ã–π
            statusText = '–ó–∞–≤–µ—Ä—à–µ–Ω - –º–æ–∂–Ω–æ –ø—Ä–∏–≤—è–∑–∞—Ç—å';
        } else if (brief.system === 'legacy' && brief.status === '–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π') {
            statusColor = '#17a2b8'; // –±–∏—Ä—é–∑–æ–≤—ã–π
            statusText = '–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω - –º–æ–∂–Ω–æ –ø—Ä–∏–≤—è–∑–∞—Ç—å';
        } else if (brief.system === 'legacy' && brief.status === '–ê–∫—Ç–∏–≤–Ω—ã–π') {
            statusColor = '#ffc107'; // –∂–µ–ª—Ç—ã–π
            statusText = '–ê–∫—Ç–∏–≤–Ω—ã–π - –Ω–µ–ª—å–∑—è –ø—Ä–∏–≤—è–∑–∞—Ç—å';
        } else {
            statusColor = '#dc3545'; // –∫—Ä–∞—Å–Ω—ã–π
            statusText = brief.status || '–ß–µ—Ä–Ω–æ–≤–∏–∫ - –Ω–µ–ª—å–∑—è –ø—Ä–∏–≤—è–∑–∞—Ç—å';
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å–∏—Å—Ç–µ–º—ã
        const systemBadge = brief.system === 'unified' ?
            '<span class="badge bg-primary me-1" style="font-size: 10px;">NEW</span>' :
            '<span class="badge bg-secondary me-1" style="font-size: 10px;">LEGACY</span>';

        element.innerHTML = `
            <div class="d-flex justify-content-between align-items-start">
                <div class="flex-grow-1">
                    <h6 class="mb-2" style="font-weight: 600; color: #495057;">
                        ${systemBadge}${brief.type_name} #${brief.id}
                    </h6>
                    <div class="mb-1">
                        <small class="text-muted">
                            <i class="fas fa-calendar me-1"></i>
                            –°–æ–∑–¥–∞–Ω: ${formatDate(brief.created_at)}
                        </small>
                    </div>
                    <div class="mb-1">
                        <small class="text-muted">
                            <i class="fas fa-user me-1"></i>
                            –ê–≤—Ç–æ—Ä: ${brief.user_name || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                        </small>
                    </div>
                    <div>
                        <span class="badge" style="background-color: ${statusColor}; color: white; font-size: 11px;">
                            ${statusText}
                        </span>
                        <small class="text-muted ms-2" style="font-size: 10px;">
                            (–°—Ç–∞—Ç—É—Å: ${brief.status})
                        </small>
                    </div>
                </div>
                <div class="ms-3">
                    ${canAttach ? `
                        <button type="button"
                                class="btn btn-success btn-sm attach-brief-btn"
                                data-brief-id="${brief.id}"
                                data-brief-type="${brief.type}"
                                data-brief-system="${brief.system}"
                                data-deal-id="${dealId}">
                            <i class="fas fa-link me-1"></i>
                            –ü—Ä–∏–≤—è–∑–∞—Ç—å
                        </button>
                    ` : `
                        <button type="button" class="btn btn-secondary btn-sm" disabled>
                            <i class="fas fa-ban me-1"></i>
                            –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω
                        </button>
                    `}
                </div>
            </div>
        `;

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏–≤—è–∑–∫–∏
        const attachBtn = element.querySelector('.attach-brief-btn');
        if (attachBtn) {
            attachBtn.addEventListener('click', function() {
                const briefId = this.getAttribute('data-brief-id');
                const briefType = this.getAttribute('data-brief-type');
                const briefSystem = this.getAttribute('data-brief-system');
                const dealId = this.getAttribute('data-deal-id');

                attachBrief(briefId, briefType, briefSystem, dealId, this);
            });
        }

        return element;
    }

    /**
     * –ü—Ä–∏–≤—è–∑–∫–∞ –±—Ä–∏—Ñ–∞ –∫ —Å–¥–µ–ª–∫–µ
     */
    async function attachBrief(briefId, briefType, briefSystem, dealId, button) {
        if (isLoading) return;

        isLoading = true;
        const originalText = button.innerHTML;

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
        button.disabled = true;
        button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º...';

        try {
            const response = await fetch(`/api/deals/${dealId}/attach-brief`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': getCsrfToken(),
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    brief_id: briefId
                })
            });

            const data = await response.json();

            if (response.ok && data.success) {
                showMessage('–ë—Ä–∏—Ñ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ —Å–¥–µ–ª–∫–µ!', 'success');

                // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É
                button.className = 'btn btn-success btn-sm';
                button.innerHTML = '<i class="fas fa-check"></i> –ü—Ä–∏–≤—è–∑–∞–Ω';
                button.disabled = true;

                // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
                setTimeout(() => {
                    window.location.reload();
                }, 2000);

            } else {
                throw new Error(data.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–≤—è–∑–∫–µ –±—Ä–∏—Ñ–∞');
            }

        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏–≤—è–∑–∫–∏ –±—Ä–∏—Ñ–∞:', error);
            showMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–≤—è–∑–∫–µ –±—Ä–∏—Ñ–∞: ' + error.message, 'error');

            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
            button.disabled = false;
            button.innerHTML = originalText;
        } finally {
            isLoading = false;
        }
    }

    /**
     * –û—Ç–≤—è–∑–∫–∞ –±—Ä–∏—Ñ–∞ –æ—Ç —Å–¥–µ–ª–∫–∏
     */
    async function detachBrief(dealId) {
        if (isLoading) return;

        isLoading = true;
        const detachBtn = document.getElementById('detachBriefBtn');

        if (detachBtn) {
            detachBtn.disabled = true;
            detachBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> –û—Ç–≤—è–∑—ã–≤–∞–µ–º...';
        }

        try {
            const response = await fetch(`/api/deals/${dealId}/detach-brief`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': getCsrfToken(),
                    'X-Requested-With': 'XMLHttpRequest'
                }
            });

            const data = await response.json();

            if (response.ok && data.success) {
                showMessage('–ë—Ä–∏—Ñ —É—Å–ø–µ—à–Ω–æ –æ—Ç–≤—è–∑–∞–Ω –æ—Ç —Å–¥–µ–ª–∫–∏!', 'success');

                // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
                setTimeout(() => {
                    window.location.reload();
                }, 1500);

            } else {
                throw new Error(data.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–≤—è–∑–∫–µ –±—Ä–∏—Ñ–∞');
            }

        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –æ—Ç–≤—è–∑–∫–∏ –±—Ä–∏—Ñ–∞:', error);
            showMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–≤—è–∑–∫–µ –±—Ä–∏—Ñ–∞: ' + error.message, 'error');

            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
            if (detachBtn) {
                detachBtn.disabled = false;
                detachBtn.innerHTML = '–û—Ç–≤—è–∑–∞—Ç—å –±—Ä–∏—Ñ';
            }
        } finally {
            isLoading = false;
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ CSRF —Ç–æ–∫–µ–Ω–∞
     */
    function getCsrfToken() {
        const token = document.querySelector('meta[name="csrf-token"]');
        return token ? token.getAttribute('content') : '';
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
     */
    function formatDate(dateString) {
        if (!dateString) return '–ù–µ —É–∫–∞–∑–∞–Ω–æ';

        try {
            const date = new Date(dateString);
            return date.toLocaleDateString('ru-RU', {
                year: 'numeric',
                month: 'short',
                day: 'numeric'
            });
        } catch (error) {
            return dateString;
        }
    }

    /**
     * –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
     */
    function showMessage(message, type = 'info') {
        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        let container = document.getElementById('notifications-container');
        if (!container) {
            container = document.createElement('div');
            container.id = 'notifications-container';
            container.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                z-index: 10000;
                max-width: 400px;
            `;
            document.body.appendChild(container);
        }

        // –¶–≤–µ—Ç–∞ –∏ –∏–∫–æ–Ω–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤
        const colors = {
            success: '#28a745',
            error: '#dc3545',
            warning: '#ffc107',
            info: '#17a2b8'
        };

        const icons = {
            success: 'fas fa-check-circle',
            error: 'fas fa-exclamation-triangle',
            warning: 'fas fa-exclamation-circle',
            info: 'fas fa-info-circle'
        };

        // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        const notification = document.createElement('div');
        notification.style.cssText = `
            background: ${colors[type] || colors.info};
            color: white;
            padding: 16px 20px;
            border-radius: 8px;
            margin-bottom: 10px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            display: flex;
            align-items: center;
            gap: 10px;
            animation: slideInRight 0.3s ease-out;
            font-size: 14px;
            line-height: 1.4;
        `;

        notification.innerHTML = `
            <i class="${icons[type] || icons.info}"></i>
            <span>${message}</span>
            <button onclick="this.parentElement.remove()"
                    style="background: none; border: none; color: white; margin-left: auto; cursor: pointer; font-size: 16px;">
                √ó
            </button>
        `;

        container.appendChild(notification);

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            if (notification.parentElement) {
                notification.style.animation = 'slideOutRight 0.3s ease-in';
                setTimeout(() => {
                    if (notification.parentElement) {
                        notification.remove();
                    }
                }, 300);
            }
        }, 5000);
    }

    // –î–æ–±–∞–≤–ª—è–µ–º CSS –∞–Ω–∏–º–∞—Ü–∏–∏
    if (!document.getElementById('brief-system-styles')) {
        const style = document.createElement('style');
        style.id = 'brief-system-styles';
        style.textContent = `
            @keyframes slideInRight {
                from {
                    transform: translateX(100%);
                    opacity: 0;
                }
                to {
                    transform: translateX(0);
                    opacity: 1;
                }
            }

            @keyframes slideOutRight {
                from {
                    transform: translateX(0);
                    opacity: 1;
                }
                to {
                    transform: translateX(100%);
                    opacity: 0;
                }
            }

            .brief-item:hover {
                box-shadow: 0 2px 8px rgba(0,0,0,0.1);
                transform: translateY(-1px);
                transition: all 0.2s ease;
            }
        `;
        document.head.appendChild(style);
    }

})();
