# Оптимизированная конфигурация Nginx для высокоскоростной загрузки больших файлов

# Основные настройки для больших файлов
client_max_body_size 0;                    # Убираем ограничения размера
client_body_timeout 600s;                  # 10 минут на загрузку
client_header_timeout 600s;                # 10 минут на заголовки
client_body_temp_path /tmp/nginx_uploads;  # Временная папка для загрузок
client_body_in_file_only clean;            # Сохраняем тело запроса в файл
client_body_buffer_size 8M;                # Увеличиваем буфер до 8MB

# Настройки для высокоскоростной передачи
sendfile on;                               # Включаем оптимизированную передачу файлов
tcp_nopush on;                            # Оптимизация TCP
tcp_nodelay on;                           # Минимизируем задержки
keepalive_timeout 120;                    # Увеличиваем время жизни соединения
keepalive_requests 1000;                  # Больше запросов на соединение

# Настройки прокси для PHP-FPM
proxy_connect_timeout 600s;
proxy_send_timeout 600s;
proxy_read_timeout 600s;
proxy_buffering off;                      # Отключаем буферизацию для больших файлов
proxy_request_buffering off;              # Не буферизуем запросы

# FastCGI настройки для PHP
fastcgi_connect_timeout 600s;
fastcgi_send_timeout 600s;
fastcgi_read_timeout 600s;
fastcgi_buffer_size 256k;
fastcgi_buffers 16 256k;
fastcgi_busy_buffers_size 512k;
fastcgi_temp_file_write_size 512k;
fastcgi_buffering off;                    # Отключаем буферизацию для потоковой загрузки

# Настройки для gzip (отключаем для больших файлов)
gzip off;                                 # Отключаем сжатие для экономии CPU
gzip_vary off;

# Настройки для безопасности и производительности
server_tokens off;                        # Скрываем версию Nginx
reset_timedout_connection on;             # Сбрасываем зависшие соединения

# Логирование для мониторинга больших загрузок
log_format upload_format '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $bytes_sent '
                         '"$http_referer" "$http_user_agent" '
                         '$request_time $upstream_response_time '
                         '$request_length $bytes_sent';

access_log /var/log/nginx/upload_access.log upload_format;

# Настройки для CORS (если нужно)
add_header 'Access-Control-Allow-Origin' '*' always;
add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

# Обработка preflight запросов
location / {
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain; charset=utf-8';
        add_header 'Content-Length' 0;
        return 204;
    }
    
    # Стандартная обработка запросов
    try_files $uri $uri/ /index.php?$query_string;
}

# Специальная локация для обработки загрузок
location /api/upload {
    # Увеличиваем лимиты только для загрузок
    client_max_body_size 0;
    client_body_timeout 1200s;              # 20 минут для очень больших файлов
    
    # Передаем в PHP
    fastcgi_pass 127.0.0.1:9000;           # Настройте под ваш PHP-FPM
    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    include fastcgi_params;
    
    # Отключаем буферизацию для потоковой загрузки
    fastcgi_buffering off;
    fastcgi_request_buffering off;
}
